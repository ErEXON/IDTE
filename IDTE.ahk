;************************************************************************************************;
; Author : Rajat Kosh 
; Script Name : IDTE.ahk 
;====================================================================================================================================================================================================
;This File is a part of IDTE
;IDTE- ID3 Tag Editor by Rajat kosh
;Copyright (c) 2013-14 by Team IDTE
;IDTE is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation`, either version 3 of the License`, or (at your option) any later version.
;IDTE is distributed in the hope that it will be useful`, but WITHOUT ANY WARRANTY`; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
;details.You should have received a copy of the GNU General Public License along with IDTE .If not`, see <http://www.gnu.org/licenses/>
;====================================================================================================================================================================================================

#Persistent         ;Keep the Script in Running Mode (Best for Response of Context Menu)
;__________________________________________________________CONFIGURATION  CHECKING ________________________________________________________________________________________;

;Check whether Current directory of IDTE is written in Documents\IDTE_Data\currentdir.idt file or Not ( In order to launch the Program from the Installed Directory During Command Line Arguments) 
ifnotexist , %A_MyDocuments%\IDTE_Data\currentdir.idt   
        FileAppend , %A_WorkingDir% , %A_MyDocuments%\IDTE_Data\currentdir.idt  ;if Not Present then Write Current Directory into currentdir.idt file

Loop, %0%  ; Loop each Command line parameters i.e. given to IDTE (NOTE :Loop  will not work in case of no arguments given to program)
{
    param := %A_Index%  ; Fetch the contents of the variable whose name is contained in A_Index.
    if CMD_Recieved=    ; if CMD_Recieved (variable) is empty (initially)
            CMD_Recieved = %param% ; then set 1st param into CMD_Recieved 
	else
            CMD_Recieved = %CMD_Recieved%`n%param%  ; add rest of them to CMD_Recieved seperated by newline
}

if %0%  ;if Parameters are given to file (through send to menu or by any means)
{
    FileRead , Workin_Dir, %A_MyDocuments%\IDTE_Data\currentdir.idt ;read the installed directory of IDTE from current currentdir.idt
    SetWorkingDir , %Workin_Dir% ;Set it as current working directory
}

;Check for Configuration of SEND TO option in Context menu. 
IniRead , checker3,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini , Album_Art, Show_Tme
    if (Checker3=1) ; if IDTE is allowed to accept files through Send to menu
            FileCreateShortcut ,%A_WorkingDir%\IDTE.exe ,%A_AppData%\Microsoft\Windows\SendTo\IDTE - It's Different Tag Editor.lnk  ; Then add Entry in Sendto Context Menu of windows
    else    
            FileDelete , %A_AppData%\Microsoft\Windows\SendTo\IDTE - It's Different Tag Editor.lnk ; Delete if Exist.

FileDelete, %A_MyDocuments%\IDTE_Data\IDTE_Logs.log ; Delete Previous Logs Generated by IDTE
FileAppend , IDTE Log, %A_MyDocuments%\IDTE_Data\IDTE_Logs.log  ; Create Space for New Logs (that is to be generated)


;___________________________________________________________Folder Existence and Volume Session Management _________________________________________________________________________;

;NOTE - Note - All the configuration settings are saved in a file named IDTE_Configuration.ini in my documents / documents folder in your Computer. If you want the IDTE to revert to its default settings then, delete this file in my document / documents folder, IDTE will automatically recover this file with its default settings.

IfNotExist , %A_MyDocuments%\IDTE_Data  ;Check for Folder in order to save Configuration and Last Database
    FileCreateDir , %A_MyDocuments%\IDTE_Data ; if there is no such existence of folder IDTE_Data in My Documents then, create one 

IfNotExist , %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini  ;If  IDTE Configuration (IDTE_Configuration.ini) doesn't exist on a machine then Follow following Procedure
{
    FileCopy , %A_WorkingDir%\Bin\IDTE_Configuration.ini, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini, UseErrorLevel ; Copy the Default ini file from the Bin Folder.
        if Errorlevel   ; if some error encountered during the Operation
            {
                ; Show the Error Reporting Dialog to the User
                MsgBox, 52, Crash Report, IDTE is unable to launch its configuration settings.`nDetails- Fatal Error :  Configuration File deleted or removed.`nError Code - 0x0000007F `nDo you want to recover configuration and report this error to IDTE Developers ?
        
                IfMsgBox ,No    ; if User Chose No then Exit Application as IDTE cannot run Without Configuration 
                        ExitApp
                IfMsgBox , Yes  ; Else, Try Recovering One More Time and Open the Bug Reporting Site
                        Progress , , Recovering Configuration, Please Wait...., IDTE Recovery Manager
                        Progress , 50
                           ; Copy the File IDTE_Configuration.ini from Bin Folder
                        FileCopy , %A_WorkingDir%\Bin\IDTE_Configuration.ini, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini, UseErrorLevel
            
            ; Launch the Bug REporting Link in order to Look for Solution From Developers Side
                RunWait , http://sourceforge.net/p/idteid3tagedito/discussion/general/
            ;Exit the Program
                Exitapp
            }
}


ifNotExist , %A_MyDocuments%\IDTE_Data\Vol.vol
    FileCopy , %A_WorkingDir%\Bin\Vol.txt, %A_MyDocuments%\IDTE_Data\Vol.vol, UseErrorLevel

IfExist , %Windir%\psswd.dat ;Searches For Password
    fileread , Read_file , %Windir%\psswd.dat  ;Copy The Password in Read_file

ifExist , %A_MyDocuments%\IDTE_Data\Vol.vol ;Vol.vol Stores/Keeps The Audio Levels Between Sessions
{
    FileReadline , Volume , %A_MyDocuments%\IDTE_Data\Vol.vol ,1 ;Firstline Keeps The Audio Information Of Previous File
    FileReadline , FlagPlay , %A_MyDocuments%\IDTE_Data\Vol.vol , 2 ;Second Line Contains Play Mode Informaton 
}
Vol = Volume - %Volume%
SB_SetText(Vol,3)
GuiControl , , Vol_info, Volume - %Volume%

#Include TrayElements.ahk ;Initialise The Tray Menu
#include Notify.ahk ; Include Notification

IniRead , Checker10, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini, UI, Enable_Admin  ; Read INI file for Admin Access
IniRead , GUISELECT, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,GUI,GUI_Select  ; Select GUI/ Theme
if (Checker10=1) ;If Admin Access is Allowed Then Starts The Application With Admin Access else Prompt For Admin Access
{
    if !A_IsAdmin && !%False%
    {
        if A_OSVersion not in WIN_2003,WIN_XP,WIN_2000
            {
                Run *RunAs "%A_ScriptFullPath%",, UseErrorLevel
                if ErrorLevel
                    MsgBox , 64 , Admin Mode , Unable To Run In Admin Mode 
            }
    }
}

IniRead , Checker30, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini, Prompt,Prompt_Passwd_Edit 
if(Checker30=1) ;Prompt The User For Password if The User Allowed The Password Protection For IDTE in Configuration
{
    IfExist , %Windir%\psswd.dat
        {
            InputBox , Confirm_pwrd , Enter Password, Enter Password To Proceed with IDTE, HIDE, 200,150
            if (Confirm_pwrd!=read_file)
                {
                    MsgBox , 16, Error, You Have Entered A Wrong Password 
                    ExitApp
                }
        }
}
IniRead , Checker27, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Miscellaneous, Allow_Movement
if (Checker27=1) ;Checks if User Selected FullScreen editing
    Gui, +Owner +LastFound  +ToolWindow -Caption

IniRead , Tray_time, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini , Tray_Not , Tray_Time
IniRead , Tost_time, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini , Tost_Not , Tost_Time


IniRead , Checker8, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,UI, Enable_Drag
if (Checker8=1) ;Checks If Splash Screen Allowed By User
{
    SplashImage , %A_WorkingDir%\GUI\Splash.png,B1 , , , IDTE - ID Tag Editor,  ;Shows Splash Image
    sleep ,1000
    SplashImage ,Off
}

IniRead , Checker29, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Miscellaneous, Enable_Grid
if(Checker29=1) ;Checks For Grid Selection in List View in Configuration
    Enable_grid = Grid

IniRead , Checker51, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Tag, Enable_Tag_Edit1
if(checker51=1) ;Check For Writing ID Type (i.e. v1 or 2) and Set Flags Accordingly
    IDType=1

IniRead , Checker52, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Tag, Enable_Tag_Edit2
if(checker52=1)
    IDType=2
IniRead , Checker53, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Tag, Enable_Tag_Edit12
if(checker53=1)
    IDType=3
IniRead , Checker55, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,ID3, Enable_Tag_Force1
if(checker55=1) ;Checks if Forcing A Tag is Allowed To File (i.e. v1 or 2) And Set Flags Accordingly
    Force=1
IniRead , Checker56, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,ID3, Enable_Tag_Force2
if(checker56=1)
    Force=2
IniRead , Checker57, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,ID3, Enable_Tag_Force12
if(checker57=1)
    Force=3

 IDTypeRead=3 ;Default Read ID3v2 
;____________________INI READ FOR TOASTER POPUPS i.e. Toaster Notification Settings______________________

IniRead , Time_pop, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Tost_Not,Tost_Time 
IniRead , MsgFont, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Toaster, Message_Font
IniRead , MsgSize, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Toaster,Message_Size
IniRead , BGCol, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Toaster,Message_Col
IniRead , TitleSize, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Toaster,Title_Size 
IniRead , buttn_font, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Toaster,Tost_Font 
IniRead ,checker7 ,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini, UI,Enable_Welcome_Note

if(Checker7=1)
{
    Options = TS=12 TM=8 TF=Times New Roman Image=IDTE.ico SI=400 SO=10 IW=60 IH=60 MF=%MsgFont% MS=%MsgSize% GC=%BGCol% TS=%TitleSize% TF=%buttn_font% GF=2 GL=3 GR=0 BW=0 GT=Off
    NotifyID:= Notify("IDTE-ID3 Tag Editor", "Welcome`nTo IDTE",Time_pop ,Options)
}

#Include Gui2.ahk ;Include GUI 2 (or Theme2)
#Include Gui3.ahk ;Include GUI 3 (or Theme3)
#Include MenuItems.ahk ; Include Context,Menubar etc menus
#include InitializeBassModules.ahk ; Make All Basic Calls To Bass Library for Initialization
GuiControl,-Redraw, Mylistview
;_________________________Miscellaneous Settings___________________________________________________________________________

SetWinDelay,1
CoordMode,Mouse , Relative

ImageListID := IL_Create(5)  ; Create an ImageList to hold x small icons.
LV_SetImageList(ImageListID)  ; Assign the above ImageList to the current ListView. ; Load the ImageList with a series of icons from the DLL.
IL_Add(ImageListID, A_ScriptDir "\GUI\icons\play.ico")  ; Omits the DLL's path so that it works on Windows 9x too.
IL_Add(ImageListID, A_ScriptDir "\GUI\icons\pause.ico")  ; Omits the DLL's path so that it works on Windows 9x too.
IL_Add(ImageListID, A_ScriptDir "\GUI\icons\UpNext.ico")  ; Omits the DLL's path so that it works on Windows 9x too.
IL_Add(ImageListID, A_ScriptDir "\GUI\icons\UpNext2.ico")  ; Omits the DLL's path so that it works on Windows 9x too.
IL_Add(ImageListID, A_ScriptDir "\GUI\menu\Oxy_Ico_48.ico")  ; Omits the DLL's path so that it works on Windows 9x too.

GuiControl , , PrBar3, %volume% ;Set Volume Control To Previous Session Level
Vol = Volume - %volume%`% ; Set Volume Textual Information 
SB_SetText(Vol , 3)
GuiControl , , Vol_info, %Vol%
;__________________________________________________ PLAY MODE _________________________________________________________________________________________________________________;
IniRead , Lyricsprovider, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Internet,Lyrics_Provider
if  Lyricsprovider=A-Z
    Menu,LyricsMenu,check,&From A-Z lyrics
else
    Menu,LyricsMenu,check,&From  lyrics.com

if FlagPlay= ;Set Playing Mode According To The Mode Selected By User Previously in The Menu Bar
    Menu ,PlayM, Check, &Play List   
else if (FlagPlay=1)
    Menu ,PlayM, Check, &Play File   
else if (FlagPlay=2)
    Menu ,PlayM, Check, &Repeat List   
else if (FlagPlay=3)
    Menu ,PlayM, Check, &Repeat File   
else if (FlagPlay=4)
    Menu ,PlayM, Check, &Play Random   

;______________________________________________________________________________RESTORE LAST DATABASE _________________________________________________________________________;
IfExist , %A_MyDocuments%\IDTE_Data\LastDB ;LastDB - It Restores The Previous Session Files Into The List View
{
    T1 := A_TickCount
    Loop, read, %A_MyDocuments%\IDTE_Data\LastDB
        {
            if(A_Index=1)
                {
                    Loop, parse, A_LoopReadLine, |
                    {
                        if(A_index = 16)
                                    break
                        LV_ModifyCol(A_index,A_LoopField)
                    }   
                }
            else
                {
                    Loop, parse, A_LoopReadLine, |
                    {
                        if (A_Index=2)
                            TrackInfo=%A_LoopField%
                        else if (A_Index=3)
                            Titleinfo=%A_LoopField%
                        else if (A_Index=4)
                            ArtistInfo=%A_LoopField%
                        else if (A_Index=5)
                            Albuminfo=%A_LoopField%
                        else if (A_Index=6)
                            YearInfo=%A_LoopField%
                        else if (A_Index=7)
                            Genreinfo=%A_LoopField%
                        else if (A_Index=8)
                            FileName=%A_LoopField%
                        else if (A_Index=9)
                            FileDir=%A_LoopField%
                        else if (A_Index=10)
                            BandInfo=%A_LoopField%
                        else if (A_Index=11)
                            PublisherInfo=%A_LoopField%
                        else if (A_Index=12)
                            ComposerInfo=%A_LoopField%
                        else if (A_Index=13)
                            Commentinfo=%A_LoopField%
                        else if (A_Index=14)
                            FileSizeMB=%A_LoopField%
                        else if (A_Index=15)
                            FileExt=%A_LoopField%
                        else if (A_Index=16)
                            Channel=%A_LoopField%
                        else if (A_Index=17)
                            Sample=%A_LoopField%
                        else if (A_Index=18)
                            Bitrate=%A_LoopField%
                        else if (A_Index=19)
                            Dur=%A_LoopField%    
                        else if (A_Index=20)
                            Supp=%A_LoopField%    
                    }
                LV_Add("Icon", "",Trackinfo, Titleinfo,Artistinfo,Albuminfo,Yearinfo,Genreinfo,FileName,FileDir,Bandinfo,Publisherinfo,Composerinfo,Commentinfo,FileSizeMB,Fileext,Channel,Sample,Bitrate,Dur,Supp)
                }
            }
    T2 := A_TickCount
    T3 := T2-T1
    Time_text = Session Loaded in %T3% Milliseconds
    SB_SetText(Time_text,4)

    ChooseFile = Null
}

ifNotExist ,  %A_MyDocuments%\IDTE_Data\LastDB
{
    loop , 16
        {
            if(A_index<3)
                LV_ModifyCol(A_Index,20)
            else
                LV_ModifyCol(A_Index,70)
        }
}
GuiControl,+Redraw, Mylistview
    Timer_Time := 2000  ;Lyrics  Autoscrolling Rate 
GuiControl , , Scroll_Rate,Current Scroll Rate : %Timer_Time% Milliseconds
IniRead , checker2 , %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini, Album_Art, Player_Art
if (Checker2=1)
    Run , %A_Workingdir%\Bin\Updater.exe
SetTimer , Scroll , %Timer_Time%
IniRead , checker1,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Album_Art,Enable_AlbumArt
if (checker1=1)
    {
        #include Startuptips.ahk
        goto , Startuptips
    }
;________________________________________________________________________________GLOBAL MEDIA HOTKEY SUPPORT _________________________________________________________________;

Media_Stop:: ; Global Media Hotkeys Support
goto ,stop
Media_Play_Pause::
goto,Play_Pause
Media_Next::
goto , BassNext
Media_Prev::
goto ,BassPrev

;____________________________________________________________________________INCLUDE OTHERS AHK SCRIPTS (MODULES)_________________________________________________________________;
#Include Subroutine.ahk ;<-- Contains all subroutines and functions
#include ToolTip.ahk ;<-- Prebuilt Example Script of AHK for Showing Tooltips when hovering over any control
#Include Music_Slider.ahk ;<-- Slider for Checking Progress as well as seeking the track
#Include GraphicButton.ahk ;<-- Graphical button library to use with toolbar
#include Notify.ahk ;<-- Toaster Popup based Notification 
#Include My_Bass_Engine.ahk ;<-- Bass Library Engine for Audio Playback
#include IDTEFastMode.ahk ;<-- Fast Mode Tag Editing GUI
#include About.ahk ;<-- About IDTE (Comment this line if you are building the IDTE by Yourself)
#include Equalizer.ahk ;<-- Equalizer for Adjusting Volume

#include FileMenu.ahk ;<-- File Options while Using File Menu From Menu Bar
#include ViewMenu.ahk ;<-- Handles View Menu From Menu Bar
#include EditMenu.ahk ;<-- Handles Edit Menu 
#include OrganizeMenu.ahk ;<-- Handles Organization of files
#include ToolsMenu.ahk ;<-- Handles All Tools menu Operations
#include RemoveMenu.ahk ;<-- Remove Tags Menu
#include ExportMenu.ahk ;<-- Export Menu
#include SearchMenu.ahk ;<-- Search
#include AboutMenu.ahk  ;<-- About Menu
#include FileOpenFunc.ahk ;<- Library for Saving File Dialogs
;_________________________________________________________________________________________________________________________________________________________________________________;



;------------------------------------------------------------------- SAVE LYRICS IN FILES-------------------------------------------------------------------------------------;
ButtonDone:
Gui,submit ,NoHide
GuiControl,disable, Mylistview
ControlGet, List, List, Selected, SysListView321, A
ValueRow:= LV_GetCount("S")
SingleTag=%ValueRow%
Progress , M  Fm10 Fs10 WM400 H70 ZH11, Please wait.. , Working Please Wait.. ,Working.. , Arial
    Loop, Parse, List, `n  ; Rows are delimited by linefeeds (`n).
        {
            percentage := (A_Index/ValueRow)*100
            Progress , %percentage% , Processed %A_Index%/%ValueRow%
            Loop, Parse, A_LoopField, %A_Tab% ; Fields (columns) in each row are delimited by tabs (A_Tab).
                {
                    DllCall( "LoadLibrary", Str,A_ScriptDir "\Plugins\AudioGenie3.dll" )
                    DllCall( "AudioGenie3\AUDIOAnalyzeFile", Str,Dummy ) ;Dummy Call for SplashText
                        if A_Index=8
                            Text=%A_LoopField%
                        else if A_Index=9
                            Folder=%A_LoopField%
                        else if A_Index=10
                            {
                                loop , %Folder%\%Text%
                                    {
                                        filename := A_LoopFileFullPath
                                    }
                                SplitPath , filename , , , FileExtn
                                if(playback_file = filename)
                                    {
                                        DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelStop", UInt,hMedia) ;Clear its buffer
                                        DllCall(A_ScriptDir "\bass.dll\BASS_Pause") ; Free Bass Contents
                                        DllCall(A_ScriptDir "\bass.dll\BASS_Stop") ; Free Bass Contents
                                        DllCall(A_ScriptDir "\bass.dll\BASS_PluginFree", int, 0) ; Free Bassplugins Contents
                                        DllCall(A_ScriptDir "\bass.dll\BASS_Free") ; Free Bass Contents
                                        GuiControl , , Clist ,Stopped :`n%Play_Title%
                                        Play_Str = Stopped :`n%Play_Title%
                                        flag=0
                                        FlagStopped=1
                                    }
                                GuiControl , , GUI_Text, Wait..

                                if FileExtn in MP3,MPP,AAC,TTA
                                    {
                                        DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                                        DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2AddLyricW", wstr ,"ENG" , wstr, "Added Using IDTE- ID3 Tag Editor", wstr, LRC ) 
                                        errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2SaveChangesW" ) 
                                    }
                                else
                                    {

                                        if(playback_file = filename)
                                            {
                                                DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelStop", UInt,hMedia) ;Clear its buffer
                                                DllCall(A_ScriptDir "\bass.dll\BASS_Pause") ; Free Bass Contents
                                                DllCall(A_ScriptDir "\bass.dll\BASS_Stop") ; Free Bass Contents
                                                DllCall(A_ScriptDir "\bass.dll\BASS_PluginFree", int, 0) ; Free Bassplugins Contents
                                                DllCall(A_ScriptDir "\bass.dll\BASS_Free") ; Free Bass Contents
                                                GuiControl , , Clist ,Stopped :`n%Play_Title%
                                                Play_Str = Stopped :`n%Play_Title%
                                                flag=0
                                                FlagStopped=1
                                                sleep , 200
                                            }

                                        DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )

                                        if FileExtn in FLAC
                                            {
                                                DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACSetUserItemW",wstr, "LYRICS", wstr , LRC) 
                                                errorcode:=  DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACSaveChangesW")
                                            }
                                        else if FileExtn in M4A,MP4,M4B
                                            {
                                                progress , off
                                                Gui +OwnDialogs
                                                MsgBox, 52, Warning, Add Lyrics as an Itunes Frame (will be incompatible with the some of the media players) ?
                                                IfMsgBox , Yes
                                                    {
                                                        Progress , M  Fm10 Fs10 WM400 H70 ZH11, Please wait.. , Working Please Wait.. ,Working.. , Arial
                                                        Progress , %percentage% , Processed %A_Index%/%ValueRow%
                                                        DllCall(A_ScriptDir "\Plugins\AudioGenie3\MP4SetiTuneFrameW",wstr,"©lyr", wstr , LRC) 
                                                        errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\MP4SaveChangesW")
                                                    }
                                            } 
                                        else if FileExtn in APE,WV
                                            {

                                                DllCall(A_ScriptDir "\Plugins\AudioGenie3\APESetUserItemW",wstr,"Lyrics", wstr , LRC) 
                                                errorcode:= DllCall(A_ScriptDir "\Plugins\AudioGenie3\APESaveChangesW")
                                            } 
                                        else if FileExtn in WMA
                                            {
                                                DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMASetUserItemW",wstr,"WM/Lyrics", wstr , LRC) 
                                                errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMASaveChangesW")
                                            } 
                                        else
                                            {
                                                DllCall(A_ScriptDir "\Plugins\AudioGenie3\LYRICSSetLyricsW", wstr ,LRC ) 
                                                errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\LYRICSSaveChangesW" )
                                            }
                                    }
                            }
                }

        }
    GuiControl,Enable, Mylistview
    GuiControl, Focus , MyListView
    IniRead , checker41,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Tray_Not,Tray_Not_Sucess

if(errorcode<>-1)
    Message = Error occured while performing operation
else
    Message = Tag Applied Sucessfully

if (checker41=1)
{
    #Persistent
    TrayTip, %Message%, 
    SetTimer, RemoveTrayTip, %Tray_Time%000
}

IniRead , checker28,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Miscellaneous,Enable_Toaster
IniRead , checker49,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Tost_Not,Tost_Not_Sucess
if (Checker49=1)
    {
        if  (checker28!=0)
            {
                Title = IDTE -ID3 Tag Editor 
                Lifespan = %timet_toast%000 ;ms
                Notify("","",0,"Wait=50")
                Notify("IDTE-ID3 Tag Editor", Message, 2,"TS=12 TM=8 TF=Times New Roman SI_=400 GF=2 GL=3")
            }
    }
Progress , off
GuiControl , , Statusinfo , Tip = Refresh Fields to View Applied Changes 
GuiControl, Focus , MyListView
return

;___________________________________________________________Select Selected Items/Files For Tagging Purpose_______________________________________________________;

contextHighlight:

GuiControl, enable , Composer
GuiControl, enable , Band
GuiControl, enable , Publisher

T1 := A_TickCount ; Starting Time


IfExist %A_Temp%\AlbumArt.png ; delete existing AlbumArt (if any)
    FileDelete , %A_Temp%\AlbumArt.png
        else IfExist %A_Temp%\AlbumArt.jpg
            FileDelete , %A_Temp%\AlbumArt.jpg


ControlGet, List, List, Selected, SysListView321, A ; Get Listview Control
ValueRow:= LV_GetCount("S") ; Get Currently selected file Rownumber 

DllCall( "LoadLibrary", Str,A_ScriptDir "\Plugins\AudioGenie3.dll" ) ; Load Audiogenie
DllCall( "AudioGenie3\AUDIOAnalyzeFile", Str,Dummy ) ; Dummy Call for Trial

SingleTag=%ValueRow% ; Singletag Variable for Single/Multiple File Selection


if(ValueRow > 1) ; if multiple files are selected then skip to last
    goto , jump 
;Default Values
{
   Trackinfo = 
   Titleinfo = 
   Artistinfo = 
   Albuminfo  = 
   Genreinfo  = 
   Yearinfo  = 
   Bandinfo  = 
   Publisherinfo  = 
   Composerinfo  = 
   Commentinfo  = 
   Channelinfo = 
   covertypeinfo = 
   coversize = 
   PicNum = 
}   
   
   RowNumber = 0  ; This causes the first loop iteration to start the search at the top of the list.
Loop
{
    RowNumber := LV_GetNext(RowNumber)  ; Resume the search at the row after that found by the previous iteration.
    if not RowNumber  ; The above returned zero, so there are no more selected rows.
        break
      LV_GetText(Folder, RowNumber, 9)
   LV_GetText(text, RowNumber, 8)
}
    mp3FileA := Folder "\" text ; Set File Completely
IfNotExist , %Folder%\%text%
    {
    SB_SetText("! This file seems to be dead, please reload the file",4)
    RowNumdead := LV_GetNext("0")
    LV_Modify(RowNumdead,"Icon" . 5)
    return
    }

if(ValueRow = 0)
    Text = No File Selected
else
{
    ADG_getinfo(mp3fileA, Trackinfo, Titleinfo, Artistinfo, Albuminfo, Genreinfo, Yearinfo, Bandinfo,Publisherinfo,Composerinfo,Commentinfo,Channelinfo,Lyrics)
    ADG_getcover()
    ADG_getcoverinfo(covertypeinfo, coversize, PicNum)
    Multi_Sel=0
}
; No of Pictures in a File 
Updown := 1 ; By default 1

if (Picnum <= 1) ; if no. of pictures <=1
{
 GuiControl , disable, prcov ; disable next prev buttons on GUI
 GuiControl , disable, nxcov 
 
    if (Picnum < 1)
    {
        Updown := 0 ; if no picture cover then set Updown to zero.
    }
} else {
            GuiControl , enable, prcov ; Else if More than one cover exist then Enable Next Prev Buttons
            GuiControl , enable, nxcov ; Present Below Picture
        }

if Lyrics=
    Lyrics = No Lyrics Found

    Menu , CoverArtMenu , Enable , Show Album Art,
    Menu , MyContextMenu , Enable , Preview Album Art,
    Menu , MyContextMenu , Enable , Play,
    Menu, MyContextMenu, Enable,Properties,
    Menu, MyContextMenu, Enable,Open File Location

; Set Retrieved information (Contained in respective Variables) into the GUI

GuiControl,, Title, %Titleinfo%
GuiControl,, Artist, %Artistinfo%
GuiControl,, Album, %Albuminfo%
GuiControl,, Year, %Yearinfo%
GuiControl,, Track, %Trackinfo%
GuiControl,, Comments, %Commentinfo%
GuiControl,, Genre, %Genreinfo%
GuiControl,, Band, %Bandinfo%
GuiControl,, Composer, %Composerinfo%
GuiControl,, Publisher, %Publisherinfo%
GuiControl, , covertype, %UpDown%/%Picnum% %Covertypeinfo% - %coverSize% Bytes
GuiControl, , LRC, %Lyrics%

if(ValueRow = 0)
GuiControl, , covertype, No Image for Preview
;Get Audio Info
CH = ; Channel Mode
HZ = ; Bitrate (I Know Var is kind'a Lame)
SR = ; Sample Rate (in Hz)

ADG_getaudioinfo(CH,HZ,SR)

; Set Info in Detailed Pane as Follow

GuiControl , , Song_info,-----------------Tag Info--------------`nTitle = %Titleinfo%`nArtist = %Artistinfo%`nAlbum = %Albuminfo%`nYear = %Yearinfo%`nTrack = %Trackinfo%`nGenre = %Genreinfo%`nComposer = %Composerinfo%`nComments = %Commentinfo%`nPublisher = %Publisherinfo%`nAlbum Artist = %Bandinfo%`n---------------Extended Info---------`n%Comp_String%`n`n---------------Audio Info---------`nSample Rate = %SR% Hz`nChannel Mode = %CH%`nAverage Bitrate = %HZ%kbps`n`n------------Lyrics----------------`n%Lyrics%`n`n-------------------------------`nInformation Retrieved With The Help Of Stefan Tongi - AudioGenie Library`n

;Set info in Cover Art Pane As Follows

IfExist , %A_Temp%\AlbumArt.png ; Check for PNG
    GuiControl,, Pic, *w240 *h235 %A_Temp%\AlbumArt.png
    else IfExist , %A_Temp%\AlbumArt.jpg  ; Else for JPG
        GuiControl,, Pic, *w240 *h235 %A_Temp%\AlbumArt.jpg
        else                              ; Else Nothing 
         GuiControl,, Pic , *w240 *h235 %A_WorkingDir%\GUI\CD Inside.png


Comp_String=    ; String Variable For Checkng Completion
Count_Ext = 0 ; Counting Variable (Flag)


loop 
{
   Fieldname%A_Index% :=  DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2GetUserTextDescriptionW", uint, A_Index,wstr) 
   FieldText%A_Index% :=  DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2GetUserTextW", uint, A_Index,wstr) 
    if Fieldname%A_Index% = 
            break
    Count_Ext += 1

}

loop , %Count_Ext%
{
     element1 := Fieldname%A_Index%
     element2 := Fieldtext%A_Index%
    Comp_String = %Comp_String%`n%element1% = %element2%
}

;Comp_String :=%Fieldname1% = %Fieldtext1%`n%Fieldname2% = %Fieldtext2%`n%Fieldname3% = %Fieldtext3%`n%Fieldname3% = %Fieldtext3%`n%Fieldname4% = %Fieldtext4%

if Comp_String =
    Comp_String = No Extended Info Available


StringLeft , MySub, text , 40
StringLen , Length , text
Arrow_ico :=Chr(10132)  
MySub =  Current File %Arrow_ico% %MySub%
if (Length>40)
  MySub =  %MySub% . .
  
SB_SetText(MySub ,1)
GuiControl , ,GUI_Text , %MySub%

jump:
if(SingleTag > 1)
    { ; if more than one file is selected
        Multi_Sel=1
        ; Set all Fields as Keep
        GuiControl,, Title, <keep> 
        GuiControl,, Artist ,<keep>
        GuiControl,, Album, <keep>
        GuiControl,, Year, <keep>
        GuiControl,, Track, <keep>
        GuiControl,, Comments, <keep>
        GuiControl,, Genre, <keep>
        GuiControl,, Band, <keep>
        GuiControl,, Composer, <keep>
        GuiControl,, Publisher, <keep>

        ; Change Some other Gui Controls
        GuiControl, , covertype,
        ; Disable some menu items which are not applicable
        Menu , CoverArtMenu , Disable , Show Album Art,
        Menu , MyContextMenu , Disable , Preview Album Art,
        Menu , MyContextMenu , Disable , Play,
        Menu, MyContextMenu, Disable,Properties,
        Menu, MyContextMenu, Disable,Open File Location,
        ; Set Cover Art as Multiple Cover Art
        GuiControl,, Pic , *w240 *h235 %A_WorkingDir%\GUI\Multi CD.png
        SB_SetText("  Multiple files are selected for processing"  ,1)
        GuiControl , ,GUI_Text , Multiple files are selected for processing
}
    ChangeCover=0
    T2 := A_TickCount
    time_t := T2-T1
    SBText = Tag retrived in %time_t% Milliseconds 
    SB_SetText(SBText,4) 
    GuiControl , ,milli , %SBText%
return

;############################################--- MULTIPLE COVER ART LABEL ---#########################################
upupn:
UpDown+=2
updwn:
UpDown--
if(UpDown<=0)
    UpDown := 1
else if (UpDown>=Picnum)
    UpDown := Picnum

FileDelete , %A_Temp%\AlbumArt.png
FileDelete , %A_Temp%\AlbumArt.jpg

Mime := DllCall(A_ScriptDir "\Plugins\AudioGenie3\MP4GetPictureMimeW",uint, Updown,wstr)
    IfInString , Mime , jpg
        DllCall(A_ScriptDir "\Plugins\AudioGenie3\MP4GetPictureFileW", wstr , A_Temp "\AlbumArt.jpg", uint, Updown)
    else 
        DllCall(A_ScriptDir "\Plugins\AudioGenie3\MP4GetPictureFileW", wstr , A_Temp "\AlbumArt.png", uint, Updown)

Mime := DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACGetPictureMimeW",uint, Updown,wstr)
    IfInString , Mime, jpeg
        DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACGetPictureFileW", wstr , A_Temp "\AlbumArt.jpg", uint, Updown)
    else 
        DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACGetPictureFileW", wstr , A_Temp "\AlbumArt.png", uint, Updown)

Mime := DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2GetPictureMimeW",uint, Updown,wstr)
    IfInString , Mime, jpeg
        DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2GetPictureFileW", wstr , A_Temp "\AlbumArt.jpg", uint, Updown)
    else 
        DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2GetPictureFileW", wstr , A_Temp "\AlbumArt.png", uint, Updown)

Mime := DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMAGetPictureMimeW",uint, Updown,wstr)
    if(Mime = jpg)
        DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMAGetPictureFileW", wstr , A_Temp "\AlbumArt.jpg", uint, Updown)
    else
        DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMAGetPictureFileW", wstr , A_Temp "\AlbumArt.png", uint, Updown)

ADG_getcoverinfo(covertypeinfo, coversize, PicNum)

 IfExist , %A_Temp%\AlbumArt.png
        GuiControl,, Pic, *w240 *h235 %A_Temp%\AlbumArt.png
    else IfExist , %A_Temp%\AlbumArt.jpg
        GuiControl,, Pic, *w240 *h235 %A_Temp%\AlbumArt.jpg
    else
        GuiControl,, Pic , *w240 *h235 %A_WorkingDir%\GUI\CD Inside.png
    
GuiControl, , covertype,%Updown%/%Picnum% %Covertypeinfo% - %coverSize% Bytes
return

;_________________________________________________________________________________Play/Open Current File(s)______________________________________________________________________;
PLAYCURRENT:
gosub , play
return


;_____________________________________________________________________________________CHANGELOG_________________________________________________________________________________;
WHATNEW:
Run , %A_WorkingDir%\changelog.txt
return


;_____________________________________________________________________SELECT COVER ART ___________________________________________________________________________________________;
ContextCoverArt:

if Folder=
    {
        if ChooseFile=
            {
                Gui +OwnDialogs  ; Forces user to dismiss the following dialog before using main window.
                MsgBox , 16, Error, Select File(s) First
                return
            }
    }

Gui +OwnDialogs  ; Forces user to dismiss the following dialog before using main window.
FileSelectFile , CoverFile , 3, , Choose Your Cover Art, Image Files(*.jpg;*.jpeg;*.png;)
if CoverFile=
    return

MOVEHERE:
if CoverType =
    CoverType = 3
SetTimer , Check_Progress , off 
SetTimer , GETLEVEL , off
SplashTextOn , , , Please Wait..
ControlGet, List, List, Selected, SysListView321, A
ValueRow:= LV_GetCount("S")
ALL:=LV_GetCount("S")
if (ALL = 0)
{
    SplashTextOff
    MsgBox , 64 , Error , No file(s) found for the required operation`, First select the files from the listview     
    SetTimer , Check_Progress
    if min=
        SetTimer , GETLEVEL , 50
    else 
        SetTimer , GETLEVEL , off
return
}
SingleTag=%ValueRow%
Progress , M  Fm10 Fs10 WM400 H70 ZH11, Please wait.. , Working Please Wait.. ,Working.. , Arial
Loop, Parse, List, `n  ; Rows are delimited by linefeeds (`n).
{
    percentage := (A_Index/ValueRow)*100
    Progress , %percentage% , Processed %A_Index%/%ValueRow%
    Loop, Parse, A_LoopField, %A_Tab% ; Fields (columns) in each row are delimited by tabs (A_Tab).
        {

            if A_Index=8
                Text=%A_LoopField%
            else if A_Index=9
                Folder=%A_LoopField%
            else if A_Index=10
                {

                    loop , %Folder%\%Text%
                            filename := A_LoopFileFullPath

                        if(playback_file = filename)
                            {
                                DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelStop", UInt,hMedia) ;Clear its buffer
                                DllCall(A_ScriptDir "\bass.dll\BASS_Pause") ; Free Bass Contents
                                DllCall(A_ScriptDir "\bass.dll\BASS_Stop") ; Free Bass Contents
                                DllCall(A_ScriptDir "\bass.dll\BASS_PluginFree", int, 0) ; Free Bassplugins Contents
                                DllCall(A_ScriptDir "\bass.dll\BASS_Free") ; Free Bass Contents
                                GuiControl , , Clist ,Stopped :`n%Play_Title%
                                Play_Str = Stopped :`n%Play_Title%
                                flag=0
                                FlagStopped=1
                            }

                        SplitPath , filename , , , FileExtn
                        Random , uniq , 102 , 345622
                        if FileExtn in MP3,AAC,MPP,TTA
                            {
                                CoverDes = Added Using IDTE - Id3 Tag Editor [Unique ID = %uniq%]  
                                DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                                DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2AddPictureFileW",str,Coverfile,str,CoverDes,Uint,CoverType,Int,0)
                                errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW") 
                            }
                        else if FileExtn in FLAC
                            {
                                CoverDes = Added Using IDTE - Id3 Tag Editor [Unique ID = %uniq%]  
                                DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                                DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACAddPictureFileW",str,Coverfile,str,CoverDes,Uint,CoverType,Int,0)
                                errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                                ;RunWait , %WinDir%\system32\cmd.exe /c Bin\IDTE "IDTE_PIC_WRITE" "%Folder%\%Text%" "%CoverFile%" "%CoverType%" , , hide
                            }
                        else if FileExtn in MP4,M4A,M4B,M4P
                            {
                                DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                                DllCall(A_ScriptDir "\Plugins\AudioGenie3\MP4AddPictureFileW",str,Coverfile)
                                errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                                ;RunWait , %WinDir%\system32\cmd.exe /c Bin\IDTE "IDTE_PIC_WRITE" "%Folder%\%Text%" "%CoverFile%" "%CoverType%" , , hide
                            }
                        else if FileExtn in WMA,ASF
                            {
                                CoverDes = Added Using IDTE - Id3 Tag Editor [Unique ID = %uniq%]  
                                DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                                DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMAAddPictureFileW",str,Coverfile,str,CoverDes,Uint,CoverType,Int,1)
                                errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                            }
                        else
                            {
                                MsgBox , 36, Unsupported Picture Type , This file -->%Text% Seems to do not support the Picture Frame `,`nAnyWay Add ID3v2 Picture Frame Into It ?
                                    ifMsgBox , Yes
                                        RunWait , %WinDir%\system32\cmd.exe /c Bin\IDTE "IDTE_PIC_WRITE" "%Folder%\%Text%" "%CoverFile%" "%CoverType%" , , hide 
                                    IfMsgBox , No
                                        SplashTextOff
                            }
                }
        }
}
Progress , off
GuiControl , , GUI_Text, Done
SB_SetText("Cover art ",4)
SplashTextOff
SetTimer , Check_Progress 
    if min=
        SetTimer , GETLEVEL , 50
    else 
        SetTimer , GETLEVEL , off

if(errorcode<>-1)
    Message = An Error is encountered while adding Album Art
else
    Message = Album Art Added Sucessfully

IniRead , checker41,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Tray_Not,Tray_Not_Sucess
if (checker41=1)
{
    #Persistent
    TrayTip, %Message%, 
    SetTimer, RemoveTrayTip, %Tray_Time%000
}
IniRead , checker28,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Miscellaneous,Enable_Toaster
IniRead , checker49,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Tost_Not,Tost_Not_Sucess
if (Checker49=1)
{
    if (checker28!=0)
        {
            Title = IDTE - ID3 Tag Editor
            Lifespan = %timet_toast%000 ;ms
            Notify("","",0,"Wait=50")
            Notify("IDTE-ID3 Tag Editor", Message, 2,"TS=12 TM=8 TF=Times New Roman SI_=400 GF=2 GL=3")
        }
}
return


;_____________________________________________________________________Context Menu (This Was Already Included in Autohotkey Help File ____________________________________________;
GuiContextMenu:  ; Launched in response to a right-click or press of the Apps key.
if A_GuiControl <> MyListView  ; Display the menu only for clicks inside the View Defined.
        if A_GuiControl <> pic
            return
; Show the menu at the provided coordinates, A_GuiX and A_GuiY.  These should be used
; because they provide correct coordinates even if the user pressed the Apps key:
if A_GuiControl <> pic 
    Menu, MyContextMenu, Show, %A_GuiX%, %A_GuiY%
else
    Menu, CoverArtMenu, Show, %A_GuiX%, %A_GuiY%    
return

if A_GuiControl <> pic
    return

ContextOpenFile:  ;The user selected "Open" in the context menu.
ContextProperties:  ; The user selected "Properties" in the context menu.
; For simplicitly, operate upon only the focused row rather than all selected rows:
FocusedRowNumber := LV_GetNext(0, "F")  ; Find the focused row.
if not FocusedRowNumber  ; No row is focused.
    return
LV_GetText(FileName, FocusedRowNumber, 8) ; Get the text of the first field.
LV_GetText(FileDir, FocusedRowNumber, 9)  ; Get the text of the second field.

IfInString A_ThisMenuItem, Play  ; User selected "Open" from the context menu.
    {    
        file = %FileDir%\%FileName%
        gosub , Force_play
    }
else  ; User selected "Properties" from the context menu.
    Run Properties "%FileDir%\%FileName%",, UseErrorLevel
return

ContextMark:
RowNumber = 0  ; This causes the first iteration to start the search at the top.
Loop
{
    RowNumber := LV_GetNext(RowNumber - 1)
    if not RowNumber  ; The above returned zero, so there are no more selected rows.
        break
    LV_Modify(RowNumber,"S")  ; Clear the row from the ListView.
}
return

#IfWinActive , ahk_class AutoHotkeyGUI
Delete::
ContextClearRows:  ; The user selected "Clear" in the context menu.  ; This causes the first iteration to start the search at the top.
    Number_Sel:=LV_GetCount("S") ;Count Selected Rows
NumberCount:=LV_GetCount() ;Count Total Rows
GuiControl,disable, Mylistview
    if (Number_Sel = NumberCount) ; If Total = Selected Then Delete All
        {
            FileDelete , %A_MyDocuments%\IDTE_Data\LastDB
            LV_Delete()
            GuiControl,Enable, Mylistview
            return
        }
RowNumber = 0
GuiControl,-Redraw, Mylistview
    Loop
    {
        RowNumber := LV_GetNext(RowNumber - 1)
        if not RowNumber  ; The above returned zero, so there are no more selected rows.
            break
        LV_Delete(RowNumber) ; Clear the row from the ListView.
    }
GuiControl,+Redraw, Mylistview
GuiControl,Enable, Mylistview
return

CopyCoverArt:
FileDelete , %A_Temp%\Copy.png
FileDelete , %A_Temp%\Copy.jpg
ifExist, %A_Temp%\AlbumArt.png
    filecopy , %A_Temp%\AlbumArt.png,%A_Temp%\Copy.png ,1 
else
    filecopy , %A_Temp%\AlbumArt.jpg,%A_Temp%\Copy.jpg ,1 
return

PasteCoverArt:
ifExist , %A_Temp%\Copy.png
    {
        CoverFile = %A_Temp%\Copy.png 
        goto ,MOVEHERE
    }
    else ifExist , %A_Temp%\Copy.jpg
        {
            CoverFile = %A_Temp%\Copy.jpg 
            goto ,MOVEHERE
        }
    else
        MsgBox , 64, Error , No File Found For Cover Art
return
;____________________________________________________________________DRAG n DROP _________________________________________________________________________________________________;
GuiDropFiles:
SetTimer , Check_Progress , off 
SetTimer , GETLEVEL , off
ChooseFile = %A_GuiEvent%
IniRead , checker4,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,List,Clear_List_Files
if (Checker4=1)
    LV_Delete()  ; Clear the ListView
FileDelete , %A_WorkingDir%\Bin\AlbumArt.png
VarSetCapacity(Filename, 260)
sfi_size = 352
VarSetCapacity(sfi, sfi_size)
FileDelete , %A_WorkingDir%\Bin\AlbumArt.jpg
library := DllCall( "LoadLibrary", Str,A_ScriptDir "\Plugins\AudioGenie3.dll" )
DllCall( "AudioGenie3\AUDIOAnalyzeFileW", Str,Dummy ) ; Dummy Call
T1 := A_TickCount
{
    Loop, parse, A_GuiEvent, `n
    {
        SplitPath , A_LoopField, FileName, FileDir , ExtType
        if ExtType in CUE
            {
                CUEFL= %A_LoopField%
                goto , CUESET
            }
            else if  ExtType in WPL,PLS,M3U
            {
                PLlist = %A_LoopField%
                goto , PLHERE   
            }
            else if ExtType =
            {
                Loop, %A_LoopField%\*.*
                {
                    SplitPath , A_LoopFileFullPath , , , EXT
                    if EXT in mp3,mp2,mp1,ogg,oga,wav,aif,aiff,aifc,mo3,xm,mod,s3m,it,mtm,umx,midi,mus,rmi,kar,flac,wma,wmv,wmp,asf,aac,mp4,m4a,m4b,m4p,wv,wvc,ape,mpc,mpp,mp+,ac3,spx,tta,opus
                        {
                            mp3List .= ( mp3List<>wm_null ? "`n" : "" ) . A_LoopFileLongPath
                            Loop, Parse, mp3List, `n
                                {
                                    mp3FileA := A_LoopFileFullPath
                                    ADG_getinfo(mp3fileA,Trackinfo,Titleinfo,Artistinfo,Albuminfo,Genreinfo,Yearinfo,Bandinfo,Publisherinfo,Composerinfo,Commentinfo,Channelinfo,Lyrics)
                                }
                            Channelinfo:= DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOGetChannelModeW",wstr)
                            Bitrate  :=  DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOGetBitrateW",int) 
                            Dur := DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOGetDurationMillisW" )
                            Dur :=  FormatMs(Dur)
                            Sample := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOGetSampleRateW",int)

                            LV_Add("Icon", "",Trackinfo, Titleinfo,Artistinfo,Albuminfo,Yearinfo,Genreinfo,A_LoopFileName, A_LoopFileDir,Bandinfo,Publisherinfo,Composerinfo,Commentinfo, A_LoopFileSizeMB " MB",A_LoopFileExt ,Channelinfo,Sample " hertz",Bitrate " Kbps",Dur)
                        }
                }

            }
            loop %A_LoopField%
            {
                FileA := A_LoopFileFullPath
                ADG_getinfo(FileA,Trackinfo,Titleinfo,Artistinfo,Albuminfo,Genreinfo,Yearinfo,Bandinfo,Publisherinfo,Composerinfo,Commentinfo,Channelinfo,Lyrics)
                Bitrate  := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOGetBitrateW",int) 
                Dur := DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOGetDurationMillisW" )
                Dur :=  FormatMs(Dur)
                Sample := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOGetSampleRateW",int)

                LV_Add("Icon", "",Trackinfo, Titleinfo,Artistinfo,Albuminfo,Yearinfo,Genreinfo,A_LoopFileName, A_LoopFileDir,Bandinfo,Publisherinfo,Composerinfo,Commentinfo, A_LoopFileSizeMB " MB",A_LoopFileExt,Channelinfo,Sample " hertz",Bitr8ate " Kbps",Dur)

            }
    }
}

DllCall("FreeLibrary", "Ptr", library)
T2 := A_TickCount
IniRead , checker9,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,UI,Auto_Adjust
if (checker9=1)
    LV_ModifyCol()  ; Auto-size each column to fit its contents.

time_t := T2-T1
SBText =  Last Tag retrived in %time_t% Milliseconds 
SB_SetText(SBText,4)
SetTimer , Check_Progress 
    if min=
        SetTimer , GETLEVEL , 50
    else 
        SetTimer , GETLEVEL , off
return


#IfWinActive , ahk_class AutoHotkeyGUI
^A::
ButtonCtrlA:
Selall:
ControlGetFocus, SelFoc , IDTE-ID`3 Tag Editor
    IfInString , SelFoc, Edit
        Send, ^a
    else
        LV_Modify(0, "Select")   ; Select all.
return


unselall:
LV_Modify(0, "-Select")  ; De-select all.
return


;_______________________________________________________________________________________EXIT_______________________________________________________________________________________;
Exitnow:
GuiClose:  ; Indicate that the script should exit automatically when the window is closed.
Critical , on
SetTimer , Check_Progress , off 
SetTimer , GETLEVEL , off
    FileDelete , %A_Temp%\AlbumArt.png
    FileDelete , %A_Temp%\Copy.png
    FileDelete , %A_Temp%\Copy.jpg
    FileDelete , %A_MyDocuments%\IDTE_Data\LastDB
IniRead , checker64,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Start,Prompt
    if (Checker64<>1)
        {
            Gui +OwnDialogs  ; Forces user to dismiss the following dialog before using main window.
            MsgBox , 36, Are You Sure?, Do You Really Wants To Exit IDTE ?
            IfMsgBox ,Yes
                {
                    goto , EXITROUTINE
                }
            else
                {
                    critical , off
                    SetTimer , Check_Progress 
                        if min=
                            SetTimer , GETLEVEL , 50
                        else 
                            SetTimer , GETLEVEL , off
                    return
                }
        }
        
EXITROUTINE:
Critical , on
IniRead , checker76 , %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini, List, Clear_List_Start
if (Checker76=1)
    {
        FileDelete , %A_MyDocuments%\IDTE_Data\LastDB
        DllCall(A_ScriptDir "\bass.dll\BASS_PluginFree", int, 0) ; Free Bassplugins Contents
        DllCall(A_ScriptDir "\bass.dll\BASS_Free") ; Free Bass Contents
        ExitApp
    }  
    DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelSlideAttribute", UInt,hMedia,Uint,2,float,-1,Uint,2000) ;Fade Out Channel
    FileDelete , %A_Temp%\AlbumArt.png
    FileDelete , %A_MyDocuments%\IDTE_Data\Vol.vol 
    FileAppend , %volume%`n%flagPlay%`n, %A_MyDocuments%\IDTE_Data\Vol.vol
    GuiControl , , GUI_Text , Saving Session..
    SB_SetText("Saving Session",4)
    ALL:=LV_GetCount()
    Now = 0
ControlGet, List, List, , SysListView321, A
if (ALL!=0)
    {
        Gui +LastFound
        Loop % LV_GetCount("Column")
        {
            SendMessage, 4125, A_Index - 1, 0, SysListView321  ; 4125 is LVM_GETCOLUMNWIDTH.
            FileAppend , %ErrorLevel%| , %A_MyDocuments%\IDTE_Data\LastDB
        }
        FileAppend , `n , %A_MyDocuments%\IDTE_Data\LastDB
    }
WinHide , IDTE-ID`3 Tag Editor
Progress , M  Fm10 Fs10 WM400 H70 ZH11, Please wait.. , Working.. ,Saving Session.. , Arial
    Loop, Parse, List, `n  ; Rows are delimited by linefeeds (`n).
        {
            Progress , %percent% , Processed %Now%/%All%
            Loop, Parse, A_LoopField, %A_Tab%  ; Fields (columns) in each row are delimited by tabs (A_Tab).
                {
                    if (A_Index=2)
                        TrackInfo=%A_LoopField%
                    else if (A_Index=3)
                        Titleinfo=%A_LoopField%
                    else if (A_Index=4)
                        ArtistInfo=%A_LoopField%
                    else if (A_Index=5)
                        Albuminfo=%A_LoopField%
                    else if (A_Index=6)
                        YearInfo=%A_LoopField%
                    else if (A_Index=7)
                        Genreinfo=%A_LoopField%
                    else if (A_Index=8)
                        FileName=%A_LoopField%
                    else if (A_Index=9)
                        FileDir=%A_LoopField%
                    else if (A_Index=10)
                        BandInfo=%A_LoopField%
                    else if (A_Index=11)
                        PublisherInfo=%A_LoopField%
                    else if (A_Index=12)
                        ComposerInfo=%A_LoopField%
                    else if (A_Index=13)
                        Commentinfo=%A_LoopField%
                    else if (A_Index=14)
                        FileSizeMB=%A_LoopField%
                    else if (A_Index=15)
                        FileExt=%A_LoopField%
                    else if (A_Index=16)
                        Channelinfo=%A_LoopField%
                    else if (A_Index=17)
                        Sample=%A_LoopField%
                    else if (A_Index=18)
                        Bitrate=%A_LoopField%
                    else if (A_Index=19)
                        Dur=%A_LoopField%
                    else if (A_Index=20)
                        Supp=%A_LoopField%
                }
            FileAppend , ""|%Trackinfo%|%Titleinfo%|%Artistinfo%|%Albuminfo%|%Yearinfo%|%Genreinfo%|%FileName%|%FileDir%|%Bandinfo%|%Publisherinfo%|%Composerinfo%|%Commentinfo%|%FileSizeMB%|%FileExt%|%Channelinfo%|%Sample%|%Bitrate%|%Dur%|%Supp%`n , %A_MyDocuments%\IDTE_Data\LastDB
            Now++
            Percent := (Now/ALL)*100
        }
    Progress , off
    DllCall(A_ScriptDir "\bass.dll\BASS_PluginFree", int, 0) ; Free Bassplugins Contents
    DllCall(A_ScriptDir "\bass.dll\BASS_Free") ; Free Bass Contents
ExitApp
return
;_____________________________________________________________ SOUND FX __________________________________________________________________________________________________________________;

Chorus:
    DllCall(A_ScriptDir "\bass.dll\BASS_ChannelRemoveFX",uint, hMedia, uint,FX) 
    FX:=DllCall(A_ScriptDir "\bass.dll\BASS_ChannelSetFX", uint, hMedia,uint ,0 , int, 1) 
    GuiControl, Focus , MyListView
return
Compression:
    DllCall(A_ScriptDir "\bass.dll\BASS_ChannelRemoveFX",uint, hMedia, uint,FX) 
    FX:=DllCall(A_ScriptDir "\bass.dll\BASS_ChannelSetFX", uint, hMedia,uint ,1 , int, 1) 
    GuiControl, Focus , MyListView
return
Distortion:
    DllCall(A_ScriptDir "\bass.dll\BASS_ChannelRemoveFX",uint, hMedia, uint,FX) 
    FX:=DllCall(A_ScriptDir "\bass.dll\BASS_ChannelSetFX", uint, hMedia,uint ,2 , int, 1) 
    GuiControl, Focus , MyListView
return
Echo:
    DllCall(A_ScriptDir "\bass.dll\BASS_ChannelRemoveFX",uint, hMedia, uint,FX) 
    FX:=DllCall(A_ScriptDir "\bass.dll\BASS_ChannelSetFX", uint, hMedia,uint ,3 , int, 1) 
    GuiControl, Focus , MyListView
return
Flanger:
    DllCall(A_ScriptDir "\bass.dll\BASS_ChannelRemoveFX",uint, hMedia, uint,FX) 
    FX:=DllCall(A_ScriptDir "\bass.dll\BASS_ChannelSetFX", uint, hMedia,uint ,4 , int, 1) 
    GuiControl, Focus , MyListView
return
Gargle:
    DllCall(A_ScriptDir "\bass.dll\BASS_ChannelRemoveFX",uint, hMedia, uint,FX) 
    FX:=DllCall(A_ScriptDir "\bass.dll\BASS_ChannelSetFX", uint, hMedia,uint ,5 , int, 1) 
    GuiControl, Focus , MyListView
return
3Dreverb:
    DllCall(A_ScriptDir "\bass.dll\BASS_ChannelRemoveFX",uint, hMedia, uint,FX) 
    FX:=DllCall(A_ScriptDir "\bass.dll\BASS_ChannelSetFX", uint, hMedia,uint ,8 , int, 1) 
    GuiControl, Focus , MyListView
return
Reverb:
    DllCall(A_ScriptDir "\bass.dll\BASS_ChannelRemoveFX",uint, hMedia, uint,FX) 
    FX:=DllCall(A_ScriptDir "\bass.dll\BASS_ChannelSetFX", uint, hMedia,uint ,6 , int, 1) 
    GuiControl, Focus , MyListView
return
EQ:
None:
    DllCall(A_ScriptDir "\bass.dll\BASS_ChannelRemoveFX",uint, hMedia, uint,FX) 
    GuiControl, Focus , MyListView
return

;____________________________________________________________ MENUABAR PLAYMODE ____________________________________________________________________;

playList:
    Menu ,PlayM, Check, &Play List
    Menu ,PlayM, UnCheck, &Play File
    Menu ,PlayM, UnCheck, &Repeat List
    Menu ,PlayM, UnCheck, &Repeat File
    Menu ,PlayM, unCheck, &Play Random 
    flagPlay=
return
playfile:
    Menu ,PlayM, Check, &Play File
    Menu ,PlayM, UnCheck, &Play List
    Menu ,PlayM, UnCheck, &Repeat List
    Menu ,PlayM, UnCheck, &Repeat File
    Menu ,PlayM, unCheck, &Play Random 
    flagPlay=1
return
repeatlist:
    Menu ,PlayM, Check, &Repeat List
    Menu ,PlayM, UnCheck, &Play File
    Menu ,PlayM, UnCheck, &Play List
    Menu ,PlayM, UnCheck, &Repeat File
    Menu ,PlayM, unCheck, &Play Random 
    flagPlay=2
return
repeatfile:
    Menu ,PlayM, Check, &Repeat File
    Menu ,PlayM, UnCheck, &Play File
    Menu ,PlayM, UnCheck, &Play List
    Menu ,PlayM, UnCheck, &Repeat List
    Menu ,PlayM, unCheck, &Play Random 
    flagPlay=3
return
Random:
    Menu ,PlayM, Check, &Play Random 
    Menu ,PlayM, UnCheck, &Play File
    Menu ,PlayM, UnCheck, &Play List
    Menu ,PlayM, UnCheck, &Repeat List
    Menu ,PlayM, UnCheck, &Repeat File
    flagPlay=4
return

;_________________________________________________________________________________ADD Button ____________________________________________________________________________;
ButtonAdd:
IniRead , checker31,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Prompt,Prompt_Passwd_Edit
if(Checker31=1)
{
    IfExist , %Windir%\psswd.dat
        {
            Gui +OwnDialogs
            InputBox , Confirm_pwrd , Enter Password, Enter Password To Save Tags, HIDE, 200,150
        if (Confirm_pwrd!=read_file)
            {
                MsgBox , 16, Error, You Do Not Have Sufficient Privilages To Modify Tags 
                return
            }
        }
}

GuiControl , , Statusinfo , Tip = Remember, Only Focused Files Are Gonna To Be Tagged
if Folder=
{
    if ChooseFile=
    {
        Gui +OwnDialogs  ; Forces user to dismiss the following dialog before using main window.
        msgbox ,16,  Error, Nothing To Save `,Select File(s) First
        return
    }
}

Gui,submit ,NoHide
if Fname=
{
    MsgBox , 16, Stop , You are not allowed to add a field without a Name
    return
}
SetTimer , Check_Progress , off 
SetTimer , GETLEVEL , off
ControlGet, List, List, Selected, SysListView321, A
ValueRow:= LV_GetCount("S")
Progress , M  Fm10 Fs10 WM400 H70 ZH11, Please wait.. , Working Please Wait.. ,Working.. , Arial
SingleTag=%ValueRow%

Loop, Parse, List, `n  ; Rows are delimited by linefeeds (`n).
{
    percentage := (A_Index/ValueRow)*100
    Progress , %percentage% , Processed %A_Index%/%ValueRow%
    IndexID := IndexID +1
    Loop, Parse, A_LoopField, %A_Tab% ; Fields (columns) in each row are delimited by tabs (A_Tab).
        {
            if A_Index=8
                Text=%A_LoopField%
            else if A_Index=9
                Folder=%A_LoopField%
            else if A_Index=10
            { 
                loop , %Folder%\%Text%
                {
                        filename := A_LoopFileFullPath
                }
                SplitPath , filename , , , FileExtn
                if(playback_file = filename)
                    {
                            DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelStop", UInt,hMedia) ;Clear its buffer
                            DllCall(A_ScriptDir "\bass.dll\BASS_Pause") ; Free Bass Contents
                            DllCall(A_ScriptDir "\bass.dll\BASS_Stop") ; Free Bass Contents
                            DllCall(A_ScriptDir "\bass.dll\BASS_PluginFree", int, 0) ; Free Bassplugins Contents
                            DllCall(A_ScriptDir "\bass.dll\BASS_Free") ; Free Bass Contents
                            GuiControl , , Clist ,Stopped :`n%Play_Title%
                            Play_Str = Stopped :`n%Play_Title%
                            flag=0
                            FlagStopped=1
                    }

                GuiControl , , GUI_Text, Wait..
                SB_SetText("Please Wait...",4)
                DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                if FileExtn in MP3,AAC,MPP,TTA
                    {
                        DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2AddUserTextW", wstr, Fname,wstr,Ftext) 
                        errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2SaveChangesW")
                    }
                else if fileExtn in FLAC
                    {
                        DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACSetUserItemW", wstr, Fname,wstr,Ftext) 
                        errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACSaveChangesW")
                    }
                else if FileExtn in WMA,ASF
                    {
                        DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMASetUserItemW", wstr, Fname,wstr,Ftext) 
                        errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMASaveChangesW")
                    }
                else if FileExtn in APE,WV
                    {
                        DllCall(A_ScriptDir "\Plugins\AudioGenie3\APESetUserItemW", wstr, Fname,wstr,Ftext) 
                        errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\APESaveChangesW")
                    }
                else 
                    {
                        MsgBox, 64, Information, This file type does not support adding Extended Fields.
                    }
            }
        }
}
GuiControl , , Fname ,
GuiControl , , Ftext ,
GuiControl, Focus , MyListView
Progress , off
GuiControl , , GUI_Text, Done
SB_SetText("Frame Added Sucessfully",4)
IniRead , checker41,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Tray_Not,Tray_Not_Sucess

if(errorcode<>-1)
    Message = An Error occured While adding Extended Field to the tag
else
    Message = New field added sucessfully to the Tag

if (checker41=1)
{
    #Persistent
    TrayTip, %Message%, 
    SetTimer, RemoveTrayTip, %Tray_Time%000
}
IniRead , checker28,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Miscellaneous,Enable_Toaster
IniRead , checker49,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Tost_Not,Tost_Not_Sucess
if (Checker49=1)
{
    if (checker28!=0)
        {
            Title = IDTE -ID3 Tag Editor 
            Lifespan = %timet_toast%000 ;ms
            Notify("","",0,"Wait=50")
            Notify("IDTE-ID3 Tag Editor", Message, 2,"TS=12 TM=8 TF=Times New Roman SI_=400 GF=2 GL=3")
        }
}
GuiControl , , Statusinfo , Tip = Refresh Fields to View Applied Changes 
GuiControl , , GUI_Text, Ready
GuiControl, Focus , MyListView
SetTimer , Check_Progress 
    if min=
        SetTimer , GETLEVEL , 50
    else 
        SetTimer , GETLEVEL , off
return

;________________________________________________________________________VOLUME / SCROLLING Functions for Mouse Devices _________________________________________________________;

WheelUp::
MouseGetPos, , , id, control
if control in syslistview321
{
    ControlGetFocus, syslistview321, A
    SendMessage, 0x115, 0, 0, syslistview321, A
    return
}
else
{
    if control in Edit11,Edit1,Edit2
    {
        ControlGetFocus, %control%, A
        SendMessage, 0x115, 0, 0, %control%, A
        return
    }
    else
    {
        if control in Edit12
        {
            ControlGetFocus, Edit12, A
            SendMessage, 0x115, 0, 0, Edit12, A
            return
        }
        else
        {
            if control in msctls_progress322
            {
                BASS_CURR := DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelGetPosition", UInt,hMedia, Int, 0 ,int ) 
                ifnotinstring ,IsCUE , CUE
                    percent := BASS_CURR + ((1/50)*BASS_GETLEN)
                else
                {
                    if( BASS_CURR > CURR_END )
                        goto , BassNext
                    percent := BASS_CURR + ((1/50)*TOTAL)
                }
                DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelSetPosition", UInt,hMedia, Uint64,percent ,Int,32768)
                return
            }

            if (volume>100)
                return
            volume := volume +3
            Vol_Bass := volume/100
            if Status_Playing=1 
                DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelSetAttribute", UInt,hMedia,Uint,2,float,Vol_Bass)
            GuiControl,, PrBar3 , %volume%
            GuiControl, Mini:, Bar3 , %volume%
            GuiControl , , mutetext ,
            Vol = Volume - %volume%`% ; Set Volume Textual Information 
            SB_SetText(Vol , 3)
            GuiControl , , Vol_info, %Vol%
            return
        }
    }
}

WheelDown::
MouseGetPos, , , id, control
if control in syslistview321
{
    ControlGetFocus, syslistview321, A
    SendMessage, 0x115, 1, 0, syslistview321, A
    return
}
else
{
    if control in Edit11,Edit1,Edit2
        {
            ControlGetFocus, %control%, A
            SendMessage, 0x115, 1, 0, %control%, A
            return
        }
    else
        {
        if control in Edit12
            {
                ControlGetFocus, Edit12, A
                SendMessage, 0x115, 1, 0, Edit12, A
                return
            }
        else
            {
                if control in msctls_progress322
                {
                    BASS_CURR := DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelGetPosition", UInt,hMedia, Int, 0 ,int ) 
                    ifnotinstring ,IsCUE , CUE
                        percent := BASS_CURR - ((1/50)*BASS_GETLEN)
                    else
                    {
                        if( BASS_CURR < CURR_START )
                            goto , BassPrev
                        percent := BASS_CURR - ((1/50)*TOTAL)
                    }
                    DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelSetPosition", UInt,hMedia, Uint64,percent ,Int,32768)
                    return
                }
                if (volume<0)
                    volume := 0
                else
                    volume := volume -3
                    Vol_Bass := volume/100
                if Status_Playing=1 
                    DllCall(A_ScriptDir . "\bass.dll\BASS_ChannelSetAttribute", UInt,hMedia,Uint,2,float,Vol_Bass)
                GuiControl,, PrBar3 , %volume%
                GuiControl, Mini:, Bar3 , %volume%
                GuiControl , , mutetext ,
                Vol = Volume - %volume%`% ; Set Volume Textual Information 
                SB_SetText(Vol , 3)
                GuiControl , , Vol_info, %Vol%
                return
            }
        }
}

;____________________________________________________________________ SAVE SESSION _______________________________________________________________________________________;

SaveSess:
Gui,+OwnDialogs
FileSelectFile , SaveSession, S24, , Save IDTE session , *.idte
FileCopy , %A_MyDocuments%\IDTE_Data\LastDB , %SaveSession%.idte ,1
return

;______________________________________________________________________ SESSION FILES _____________________________________________________________________________________;
LoadSess:
Gui,+OwnDialogs
FileSelectFile , Loads, , , Select Your Previously Saved session File, *.idte
if Loads=
    return
LV_Delete() 
FileDelete , %A_MyDocuments%\IDTE_Data\LastDB
Loop, read, %Loads%
{
    if(A_Index=1)
    {
        Loop, parse, A_LoopReadLine, |
            {
                if(A_index = 19)
                break
            }   
    }
    else
        {
            Loop, parse, A_LoopReadLine, |
            {
                if (A_Index=2)
                    TrackInfo=%A_LoopField%
                else if (A_Index=3)
                    Titleinfo=%A_LoopField%
                else if (A_Index=4)
                    ArtistInfo=%A_LoopField%
                else if (A_Index=5)
                    Albuminfo=%A_LoopField%
                else if (A_Index=6)
                    YearInfo=%A_LoopField%
                else if (A_Index=7)
                    Genreinfo=%A_LoopField%
                else if (A_Index=8)
                    FileName=%A_LoopField%
                else if (A_Index=9)
                    FileDir=%A_LoopField%
                else if (A_Index=10)
                    BandInfo=%A_LoopField%
                else if (A_Index=11)
                    PublisherInfo=%A_LoopField%
                else if (A_Index=12)
                    ComposerInfo=%A_LoopField%
                else if (A_Index=13)
                    Commentinfo=%A_LoopField%
                else if (A_Index=14)
                    FileSizeMB=%A_LoopField%
                else if (A_Index=15)
                    FileExt=%A_LoopField%
                else if (A_Index=16)
                    Channel=%A_LoopField%
                else if (A_Index=17)
                    Sample=%A_LoopField%
                else if (A_Index=18)
                    Bitrate=%A_LoopField%
                else if (A_Index=19)
                    Dur=%A_LoopField%
            }
        LV_Add("Icon", "",Trackinfo, Titleinfo,Artistinfo,Albuminfo,Yearinfo,Genreinfo,FileName,FileDir,Bandinfo,Publisherinfo,Composerinfo,Commentinfo,FileSizeMB,Fileext,Channel,Sample,Bitrate,Dur)
        }
}
ChooseFile = Null

IniRead , Checker9, %A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,UI,Auto_Adjust 
if (checker9=1) ;If Auto Adjust Allowed By User Then
    LV_ModifyCol() ; Auto-size each column to fit its contents.
return

;___________________________________________________________ LYRICS FETCH OPTION ________________________________________________________________;

 Button>>:
 MouseGetPos , XGui , YGui
 Menu, LyricsMenu, Show, %XGui%, %YGui%
 return

SetOption:
IfInString A_ThisMenuItem, &From A-Z lyrics
{
    Lyricsprovider=A-Z
    IniWrite , A-Z,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Internet,Lyrics_Provider
    Menu,LyricsMenu,check,&From A-Z lyrics
    Menu,LyricsMenu,uncheck,&From  lyrics.com
}
else
{
    LyricsProvider=Lyricsdotcom
    IniWrite , Lyricsdotcom,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini,Internet,Lyrics_Provider
    Menu,LyricsMenu,check,&From  lyrics.com
    Menu,LyricsMenu,uncheck,&From A-Z lyrics
}
return

;___________________________________________________________________Lyrics Fetching ____________________________________________________________________;
ButtonFetch:
    Turn=0
;goto , SLY
refetch:
FileEncoding , 
Progress , M  Fm10 Fs10 WM400 H70 ZH11, Fetching Lyrics , Please Wait..., Searching Online.. , Arial
FileDelete , %A_Temp%\FILE.txt
FileDelete , %A_Temp%\FILE2.txt
FileDelete , %A_Temp%\file.htm
lyricsexist=1
If lyrics<>
  lyricsexist=0
  
;____________________________________________________________________________________________LYRICS.COM_______________________________________________________________________________________
if LyricsProvider=Lyricsdotcom
{
    loop , 1 
    {
        StringReplace ,Artistinfo, Artistinfo ,%A_Space%,-,All ,UseErrorLevel
        StringReplace , Titleinfo, Titleinfo ,(Bonus) ,,All , UseErrorLevel
        StringReplace ,Artistinfo, Artistinfo ,(,,All ,UseErrorLevel
        StringReplace ,Artistinfo, Artistinfo ,),,All ,UseErrorLevel
        StringReplace ,Artistinfo, Artistinfo ,`,,,All ,UseErrorLevel
        StringReplace ,Artistinfo, Artistinfo ,',,All ,UseErrorLevel
        StringReplace ,Artistinfo, Artistinfo ,&,,All ,UseErrorLevel
        StringReplace ,Artistinfo, Artistinfo ,.,,All ,UseErrorLevel
    }
    Progress , 5
    loop ,1
    {
        StringReplace , Titleinfo, Titleinfo ,%A_Space% ,-,All , UseErrorLevel
        StringReplace , Titleinfo, Titleinfo ,(Bonus) ,,All , UseErrorLevel
        StringReplace , Titleinfo, Titleinfo ,( ,,All , UseErrorLevel
        StringReplace , Titleinfo, Titleinfo ,) ,,All , UseErrorLevel
        StringReplace , Titleinfo, Titleinfo ,`, ,,All , UseErrorLevel    
        StringReplace , Titleinfo, Titleinfo ,',,All , UseErrorLevel    
        StringReplace , Titleinfo, Titleinfo ,&,,All , UseErrorLevel    
        StringReplace ,Artistinfo, Artistinfo ,.,,All ,UseErrorLevel
    }
    StringLower , Artistinfo, Artistinfo
    StringLower , Titleinfo, Titleinfo

    Progress , 40
    UrlDownloadToFile ,http://www.lyrics.com/%Titleinfo%-lyrics-%Artistinfo%.html,%A_Temp%\file.htm 

    if errorlevel
    {
        SplashTextOff
        Progress , off
        Gui,+OwnDialogs
        MsgBox , 16, Error , There is an Error Occured While Connecting To The Internet `nRemember :-`n1. Fetching Will Not Work in Case Of Authentic Proxy`n2. Fetching Will Not Possible in Case of Virtualized Machine`n3. IDTE Uses Your Windows\Wine Internet Explorer Settings`n (So Make Sure They Are Correct) 
        return
    }
    Progress , 80
    FileRead ,file, %A_Temp%\file.htm
    loop , parse , file , `n
    {
        if (FlagLY=1)
            {
                IfInString ,A_loopField ,Lyrics powered by 
                    break
                else
                    FileAppend , %A_LoopField% , %A_Temp%\FILE.txt
            }
        IfInString ,A_loopField ,<div id="lyric_space">  
                FlagLY=1
    }
    Progress , 85
    FileRead , lyrics , %A_Temp%\FILE.txt
    FLE= %A_Temp%\FILE2.txt
    fileL := FileOpen(FLE,"w")
    loop , parse , lyrics , />
    {
        IfInString , A_LoopField , <br
            {
                StringReplace , LoopField , A_LoopField , <br, `n
                StringReplace , LoopField , LoopField , ’, ', All 
                String = %LoopField%
                fileL.write(String)
            }
    }
    Progress , 100
    fileL.close()
    Progress, off
    FileRead , lyrics , %A_Temp%\FILE2.txt
    GuiControl , , LRC , %lyrics%
}
;________________________________________________________________________________A-Z LYRICS _________________________________________________________________________________________________
else
{
    loop , 1 
        {
            StringReplace ,Artistinfo, Artistinfo ,%A_Space%,,All ,UseErrorLevel
            StringReplace , Titleinfo, Titleinfo ,(Bonus) ,,All , UseErrorLevel
            StringReplace ,Artistinfo, Artistinfo ,(,,All ,UseErrorLevel
            StringReplace ,Artistinfo, Artistinfo ,),,All ,UseErrorLevel
            StringReplace ,Artistinfo, Artistinfo ,`,,,All ,UseErrorLevel
            StringReplace ,Artistinfo, Artistinfo ,',,All ,UseErrorLevel
            StringReplace ,Artistinfo, Artistinfo ,&,,All ,UseErrorLevel
            StringReplace ,Artistinfo, Artistinfo ,.,,All ,UseErrorLevel
        }
    Progress , 5

    loop ,1
        {
            StringReplace , Titleinfo, Titleinfo ,%A_Space% ,,All , UseErrorLevel
            StringReplace , Titleinfo, Titleinfo ,(Bonus) ,,All , UseErrorLevel
            StringReplace , Titleinfo, Titleinfo ,( ,,All , UseErrorLevel
            StringReplace , Titleinfo, Titleinfo ,) ,,All , UseErrorLevel
            StringReplace , Titleinfo, Titleinfo ,`, ,,All , UseErrorLevel    
            StringReplace , Titleinfo, Titleinfo ,',,All , UseErrorLevel    
            StringReplace , Titleinfo, Titleinfo ,&,,All , UseErrorLevel    
            StringReplace ,Artistinfo, Artistinfo ,.,,All ,UseErrorLevel
        }
    StringLower , Artistinfo, Artistinfo
    StringLower , Titleinfo, Titleinfo
    
    Progress , 40
    UrlDownloadToFile ,http://www.azlyrics.com/lyrics/%Artistinfo%/%Titleinfo%.html,%A_Temp%\file.htm
    if errorlevel
    {
        SplashTextOff
        Progress , off
        Gui,+OwnDialogs
            MsgBox , 16, Error , There is an Error Occured While Connecting To The Internet `nRemember :-`n1. Fetching Will Not Work in Case Of Authentic Proxy`n2. Fetching Will Not Possible in Case of Virtualized Machine`n3. IDTE Uses Your Windows\Wine Internet Explorer Settings`n (So Make Sure They Are Correct) 
        return
    }
    Progress , 80
    FileRead ,file, %A_Temp%\file.htm
    loop , parse , file , `n
        {
            if (FlagLY=1)
                {
                    IfInString ,A_loopField ,<!-- end of lyrics -->  
                        break
                    else
                        FileAppend , %A_LoopField% , %A_Temp%\FILE.txt
                }
            IfInString ,A_loopField ,<!-- start of lyrics -->  
                FlagLY=1
        }
    Progress , 85
    FileRead , lyrics , %A_Temp%\FILE.txt
    FLE= %A_Temp%\FILE2.txt
    fileL := FileOpen(FLE,"w")
    loop , parse , lyrics , />
        {
            IfInString , A_LoopField , <br
                {
                    StringReplace , LoopField , A_LoopField , <br, `n
                    StringReplace , LoopField , LoopField , ’, ', All 
                    String = %LoopField%
                    fileL.write(String)
                }
        }
    Progress , 100
    fileL.close()
    Progress, off
    FileRead , lyrics , %A_Temp%\FILE2.txt
    GuiControl , , LRC , %lyrics%
}

IfInString, lyrics, Recommended sites!
    lyrics=

if lyrics= 
{
    if Turn=0
    {
        MsgBox, 262436, Lyrics Not Found, Fetching of lyrics returned an empty lyrics String `, there might be possibility that maybe the artist or the title is not correct in Tag. Do you want to enter it manually
        Turn++
        IfMsgBox , Yes
        {
            InputBox , Artistinfo , Artist, Enter Artist Name , , 200, 150
            if Artistinfo=
            {
                FileDelete , %A_Temp%\FILE2.txt
                FileDelete , %A_Temp%\FILE.txt
                FileDelete , %A_Temp%\file.htm
                progress , off
                GuiControl, Focus , MyListView
                return
            }
            else
            {
                InputBox , Titleinfo , Title, Enter Song Title , , 200, 150
                if  Titleinfo=
                {
                    FileDelete , %A_Temp%\FILE2.txt
                    FileDelete , %A_Temp%\FILE.txt
                    FileDelete , %A_Temp%\file.htm
                    Progress , off
                    GuiControl, Focus , MyListView
                    return
                }
                else
                    goto , refetch
            }
        }
    }
}
FileDelete , %A_Temp%\FILE2.txt
FileDelete , %A_Temp%\FILE.txt
FileDelete , %A_Temp%\file.htm
progress , off
GuiControl, Focus , MyListView

FileEncoding , UTF-16
Return

;__________________________________________________________ LYRICS AUTOSCROLLING ___________________________________________________________________________________;

ButtonStop:
    SetTimer , Scroll , Off
    GuiControl, Focus , MyListView ;Focus The List View
return
ButtonContinue:
    SetTimer , Scroll , On
    GuiControl, Focus , MyListView ;Focus The List View
return
ButtonFast:
if(Timer_Time<=0)
    return
SetTimer , Scroll , Off
Timer_Time := Timer_Time-500

if(Timer_Time<=0)
    return
else
    GuiControl , , Scroll_Rate,Current Scroll Rate : %Timer_Time% Milliseconds
    SetTimer , Scroll , %Timer_Time%
    GuiControl, Focus , MyListView ;Focus The List View
return

ButtonCustom:
SetTimer , Scroll , Off
 Gui +OwnDialogs
InputBox , MyTime, Scrolling Delay  ,Enter Scrolling Time (In milliseconds)
    if MyTime=
    {
        SetTimer , Scroll , %Timer_Time%
        return
    }
    Check_num := MyTime/10
    if  Check_num=
    {
        MsgBox , 16, Error , Only Numbers are allowed
        SetTimer , Scroll , %Timer_Time%
        return
    }   

Timer_Time := MyTime
GuiControl , , Scroll_Rate,Current Scroll Rate : %Timer_Time% Milliseconds
SetTimer , Scroll , %Timer_Time%
GuiControl, Focus , MyListView ;Focus The List View
return

ButtonSlow:
SetTimer , Scroll , Off
Timer_Time := Timer_Time +500
GuiControl , , Scroll_Rate,Current Scroll Rate : %Timer_Time% Milliseconds
SetTimer , Scroll , %Timer_Time%
GuiControl, Focus , MyListView ;Focus The List View
return

Scroll:
if min<>
    SetTimer , Scroll ,off
ControlGetFocus, Edit15, A
SendMessage, 0x115, 1, 0, Edit15, A
return

ELink:
Run, mailto:rajatkosh2153@gmail.com?subject=Suggestions Toward IDTE&body=
return

;______________________________________________________________________ Dead File Detection __________________________________________________________________________________;
DeadFile:
SetTimer , Check_Progress , off 
SetTimer , GETLEVEL , off
ControlGet, List, List, , SysListView321, A
Row_No := 1
ALL:=LV_GetCount()
    Progress , M  Fm10 Fs10 WM400 H70 ZH11, Please wait.. , Analysing Please Wait.. ,Working.. , Arial
Loop, Parse, List, `n  ; Rows are delimited by linefeeds (`n).
{
    Per_age := (A_index/ALL)*100
    Per_age:=Floor(Per_age)
    Progress , %Per_age%
        Loop, Parse, A_LoopField, %A_Tab%  ; Fields (columns) in each row are delimited by tabs (A_Tab).
            {
                if (A_Index=8)
                    FileName=%A_LoopField%
                else if (A_Index=9)
                    FileDir=%A_LoopField%
            }
        IfNotExist  , %FileDir%\%FileName%
            LV_Delete(Row_No) ; Clear the row from the ListView.  
        else
            Row_No := Row_No + 1
}

Progress  , off
SetTimer , Check_Progress , on 
SetTimer , GETLEVEL , on
return

;__________________________________________________________ COVER TYPE ____________________________________________________________________________________________________________________;
AC:
IfInString A_ThisMenuItem, &Cover Front  (Default)
        CoverType =3
else IfInString A_ThisMenuItem, &Cover Back
        CoverType =4
else IfInString A_ThisMenuItem,&Leaflet Page
       CoverType =5
else IfInString A_ThisMenuItem, &Media
       CoverType =6
else IfInString A_ThisMenuItem,&Lead Artist/Performer
       CoverType =7
else IfInString A_ThisMenuItem,&Artist
       CoverType =8
else IfInString A_ThisMenuItem,&Band or Orchestra
       CoverType =10
else IfInString A_ThisMenuItem,&Composer
       CoverType =11
else IfInString A_ThisMenuItem,&Lyricst
       CoverType =12
else IfInString A_ThisMenuItem,&Band Logo
       CoverType =19
else IfInString A_ThisMenuItem,  &Studio Logotype
       CoverType =20
else IfInString A_ThisMenuItem, &File icon
       CoverType =1
else IfInString A_ThisMenuItem, &Other
        CoverType =0

GuiControl ,Disable, Mylistview
{
    FileCreateDir , %A_Temp%\Covers
    COutput = %A_Temp%\Covers
    SetTimer , Check_Progress , off 
    SetTimer , GETLEVEL , off
    ControlGet, List, List, Selected, SysListView321, A
    ValueRow:= LV_GetCount("S")
    if(ValueRow>1)
        Updown := 1
    SingleTag=%ValueRow%
    Progress , M  Fm10 Fs10 WM400 H70 ZH11, Please wait.. , Analysing Please Wait.. ,Working.. , Arial
    Loop, Parse, List, `n  ; Rows are delimited by linefeeds (`n).
    {
        percentage := (A_Index/ValueRow)*100
        Progress , %percentage% , Processed %A_Index%/%ValueRow%
        Loop, Parse, A_LoopField, %A_Tab% ; Fields (columns) in each row are delimited by tabs (A_Tab).
            {

                if A_Index=8
                    Text=%A_LoopField%
                else if A_Index=9
                    Folder=%A_LoopField%

                else if A_Index=10
                {
                    loop , %Folder%\%Text%
                        filename := A_LoopFileFullPath

                    FileDelete , %A_Temp%\AlbumArt.png
                        FileDelete , %A_Temp%\AlbumArt.jpg
                    ADG_getcover()
                    
                    IfNotExist , %A_Temp%\AlbumArt.png
                        IfNotExist , %A_Temp%\AlbumArt.jpg
                            continue                                   
                    IfNotExist , %A_Temp%\AlbumArt.png
                        FileMove , %A_Temp%\AlbumArt.jpg, %Coutput%\CoverArt%SingleTag%.jpg , 1
                    else
                        FileMove , %A_Temp%\AlbumArt.png, %Coutput%\CoverArt%SingleTag%.png , 1
                }
            }
        SingleTag=%A_Index%
    }
SplashTextOff
}
Progress , M  Fm10 Fs10 WM400 H70 ZH11, Please wait.. , Working Please Wait.. ,Working.. , Arial
Loop, Parse, List, `n  ; Rows are delimited by linefeeds (`n).
{
    percentage := (A_Index/ValueRow)*100
    Random , uniq , 10 , 39094
    Progress , %percentage% , Processed %A_Index%/%ValueRow%
    Loop, Parse, A_LoopField, %A_Tab% ; Fields (columns) in each row are delimited by tabs (A_Tab).
        {
            if A_Index=8
                Text=%A_LoopField%
            else if A_Index=9
                Folder=%A_LoopField%
            else if A_Index=10
                {
                    loop , %Folder%\%Text%
                            filename := A_LoopFileFullPath
                    SplitPath , filename , , , FileExtn
                    Coverpic = %A_Temp%\Covers\CoverArt%SingleTag%.png
                    IfNotExist , %A_Temp%\Covers\CoverArt%SingleTag%.png
                        IfExist , %A_Temp%\Covers\CoverArt%SingleTag%.jpg
                                Coverpic = %A_Temp%\Covers\CoverArt%SingleTag%.jpg
                        else
                            goto , outloop
                    
                    if FileExtn in MP3,AAC,MPP,TTA
                        {
                            CoverDes = Added Using IDTE - Id3 Tag Editor [Unique ID = %uniq%]  
                            DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                            DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2DeleteSelectedFrameW",uint,1095780675,uint,Updown)
                            errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                            DllCall(A_ScriptDir "\Plugins\AudioGenie3\ID3V2AddPictureFileW",str,Coverpic,str,CoverDes,Uint,CoverType,Int,0)
                            errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                        }
                    else if FileExtn in FLAC
                        {
                            DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                            DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACDeletePictureW",Uint,Updown)
                            errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                            DllCall(A_ScriptDir "\Plugins\AudioGenie3\FLACAddPictureFileW",str,Coverpic,str,CoverDes,Uint,CoverType,Int,0)
                            errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                        }
                    else if FileExtn in MP4,M4A,M4B,M4P,AAC
                        {
                            DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                            DllCall(A_ScriptDir "\Plugins\AudioGenie3\MP4DeletePictureW",Uint,Updown)
                            errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                            DllCall(A_ScriptDir "\Plugins\AudioGenie3\MP4AddPictureFileW",str,Coverpic)
                            errorcode :=  DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                        }
                    else if FileExtn in WMA,WMV,WMP,ASF
                        {
                            DllCall( A_ScriptDir "\Plugins\AudioGenie3\AUDIOAnalyzeFileW", Str,filename )
                            DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMADeletePictureW",Uint,Updown)
                            errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                            DllCall(A_ScriptDir "\Plugins\AudioGenie3\WMAAddPictureFileW",str,Coverpic,str,CoverDes,Uint,CoverType,Int,Updown)
                            errorcode := DllCall(A_ScriptDir "\Plugins\AudioGenie3\AUDIOSaveChangesW")
                        }
                }
        }
    outloop:
        SingleTag=%A_Index%
}
GuiControl ,Enable, Mylistview
FileRemoveDir , %A_Temp%\Covers , 1
progress , off
GuiControl , , GUI_Text, Done
SplashTextOff

if(errorcode<>-1)
    Message = Error occured while Adding Cover Art
else
    Message = Cover Art Added Sucessfully

IniRead , checker41,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Tray_Not,Tray_Not_Sucess
if (checker41=1)
    {
        #Persistent
        TrayTip, %Message%, 
        SetTimer, RemoveTrayTip, %Tray_Time%000
    }
IniRead , checker28,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Miscellaneous,Enable_Toaster
IniRead , checker49,%A_MyDocuments%\IDTE_Data\IDTE_Configuration.ini ,Tost_Not,Tost_Not_Sucess
if (Checker49=1)
    {
        if (checker28!=0)
            {
                Title = IDTE -ID3 Tag Editor
                Lifespan = %timet_toast%000 ;ms
                Notify("","",0,"Wait=50")
                Notify("IDTE-ID3 Tag Editor", Message, 2,"TS=12 TM=8 TF=Times New Roman SI_=400 GF=2 GL=3")
            }
    }
SetTimer , Check_Progress 
    if min=
        SetTimer , GETLEVEL , 50
    else 
        SetTimer , GETLEVEL , off
return

;________________________________________________________________ BUTTON FETCH COVERART ____________________________________________________________________________________;
ButtonFetchCoverArt:
    SetTimer , Check_Progress , off 
    SetTimer , GETLEVEL , off
    Gui , CoverUI: new
    Gui ,CoverUI: Add, ActiveX, xm w980 h580 vWB, Shell.Explorer
    ComObjConnect(WB, WB_events)  ; Connect WB's events to the WB_events class object.
    Gui, CoverUI: Add , Progress, xm y600 w980 h20 vInternetPrbar +Theme,10 
    Gui, CoverUI: Show , , CoverArt Fetcher
    Gui Submit, NoHide
    StringReplace , SART, Artistinfo , %A_Space%, +, All
    StringReplace , SALB, Albuminfo , %A_Space%, +, All
    URL = http://www.discogs.com/search/?q=%SART%`%20-+`%20%SALB%
    GuiControl , CoverUI:, InternetPrbar, 20
    WB.Navigate(URL)
return

class WB_events
{
    NavigateComplete2(wb, NewURL)
    {
     loop , 10
        {
            Val := A_index*10
            GuiControl ,CoverUI: , InternetPrbar, %Val%
            sleep 20
        }
        progress , off
    }
}

CoverUIGuiClose:
SetTimer , Check_Progress , on 
SetTimer , GETLEVEL , on
Gui, CoverUI: Destroy
return
;_________________________________________________________LEFT CLICK DETECTION ON GUI____________________________________________________________________________;

WM_MOUSELEFT(wParam, lParam)
{
    global id
    MouseGetPos, mX,,, control
    
    IfInString , control , SysList
            Menu, MyContextMenu, Show, %A_GuiX%, %A_GuiY%
    return
}

WM_MOUSELEFTART(wParam, lParam)
{
    global id
    MouseGetPos, mX,,, control

    IfInString , control , Static2
        Menu, CoverArtMenu, Show, %A_GuiX%, %A_GuiY%
    else IfInString , control , Edit
        Menu, RightCMenu, Show, %A_GuiX%, %A_GuiY%
return
}

Rmenu:
IfinString, A_ThisMenuItem, Cut
    Send , ^x
else IfinString, A_ThisMenuItem, Copy
    Send , ^c
else IfinString, A_ThisMenuItem, Paste
    Send , ^v
else IfinString, A_ThisMenuItem, Delete
    Send , {Del}
return

;_____________________________________________________RESTORING IDTE FROM TRAY________________________________________________________________________________________________

Res_IDTE:
IfWinNotActive ,  IDTE-ID`3 Tag Editor
{
	WinMaximize , IDTE-ID`3 Tag Editor
	WinActivate ,  IDTE-ID`3 Tag Editor
}
return
;______________________________________________________________________GUI RESIZE _________________________________________________________________________________________________

GuiSize:
if(A_Eventinfo = 1)
{
    Critical , on
    WinMinimize , IDTE-ID3 Tag Editor
    min = 1
    SetTimer , Scroll , Off 
    SetTimer , GETLEVEL , off
    critical , off
return
}
else if(A_Eventinfo = 2)
{
    min =
    critical , on
    SetTimer , Scroll , on 
    SetTimer , GETLEVEL , on
    Critical , off
return
}
if(A_Guiwidth < 1340)
{
    GuiControl , hide , SBar
    Guicontrol , Show, milli
    Guicontrol , Show, GUI_Text
    Guicontrol , Show, Completed
    Guicontrol , Show, Vol_info
    Guicontrol , Show, CPU
    DllCall("ShowScrollBar", "uint", WinExist(), "uint", 0x0, "int",1) ; Show Horizontal Scroll
    flag_resolution=1
}
if (A_Guiheight < 660)
{
    GuiControl, Hide, SBar
    Guicontrol , Show, milli
    Guicontrol , Show, GUI_Text
    Guicontrol , Show, Completed
    Guicontrol , Show, Vol_info
    Guicontrol , Show, CPU
    flag_resolution=1
    DllCall("ShowScrollBar", "uint", WinExist(), "uint", 0x1, "int", 1) ; Show Vertical Bar
}

if (A_Guiwidth >= 1340 )
{
    GuiControl , hide , SBar
    Guicontrol , Show, milli
    Guicontrol , Show, GUI_Text
    Guicontrol , Show, Completed
    Guicontrol , Show, Vol_info
    Guicontrol , Show, CPU
    DllCall("ShowScrollBar", "uint", WinExist(), "uint", 0x0, "int", 0) ; Show Vertical Only
    flag_resolution=1
}

if (A_Guiheight >= 660)
{
    GuiControl, Hide, SBar
    Guicontrol , Show, milli
    Guicontrol , Show, GUI_Text
    Guicontrol , Show, Completed
    Guicontrol , Show, Vol_info
    Guicontrol , Show, CPU
    flag_resolution=1
    DllCall("ShowScrollBar", "uint", WinExist(), "uint", 0x1, "int", 0) ; Show Horizontal Only
}

if(A_Guiwidth>1340  and A_Guiheight > 660)
{
    flag_resolution=
    Guicontrol , hide, milli
    Guicontrol , hide, GUI_Text
    Guicontrol , hide, Completed
    Guicontrol , hide, Vol_info
    Guicontrol , hide, CPU
    GuiControl , show , SBar
}
if flag_resolution=1
{
    UpdateScrollBars(A_Gui, A_GuiWidth, A_GuiHeight)
}

return
;______________________________________________________________________Mini Mode _________________________________________________________________________________________________

MiniMode:
    #Include MiniMode.ahk
    goto ,  IDTEMini


;________________________________________________________________________SCROLL BARS_____________________________________________________________________________________________

#IfWinActive
UpdateScrollBars(GuiNum, GuiWidth, GuiHeight)
{
    static SIF_RANGE=0x1, SIF_PAGE=0x2, SIF_DISABLENOSCROLL=0x8, SB_HORZ=0, SB_VERT=1
   
    Gui, %GuiNum%:Default
    Gui, +LastFound
   
    ; Calculate scrolling area.
    Left := Top := 9999
    Right := Bottom := 0
    WinGet, ControlList, ControlList
    Loop, Parse, ControlList, `n
    {
        GuiControlGet, c, Pos, %A_LoopField%
        if (cX < Left)
            Left := cX
        if (cY < Top)
            Top := cY
        if (cX + cW > Right)
            Right := cX + cW
        if (cY + cH > Bottom)
            Bottom := cY + cH
    }
    Left -= 8
    Top -= 8
    Right += 8
    Bottom += 8
    ScrollWidth := Right-Left
    ScrollHeight := Bottom-Top
    ; Initialize SCROLLINFO.
    VarSetCapacity(si, 28, 0)
    NumPut(28, si) ; cbSize
    NumPut(SIF_RANGE | SIF_PAGE, si, 4) ; fMask
   
    ; Update horizontal scroll bar.
    NumPut(ScrollWidth, si, 12) ; nMax
    NumPut(GuiWidth, si, 16) ; nPage
    DllCall("SetScrollInfo", "uint", WinExist(), "uint", SB_HORZ, "uint", &si, "int", 1)
   
    ; Update vertical scroll bar.
    ; NumPut(SIF_RANGE | SIF_PAGE | SIF_DISABLENOSCROLL, si, 4) ; fMask
    NumPut(ScrollHeight, si, 12) ; nMax
    NumPut(GuiHeight, si, 16) ; nPage
    DllCall("SetScrollInfo", "uint", WinExist(), "uint", SB_VERT, "uint", &si, "int", 1)
   
    if (Left < 0 && Right < GuiWidth)
        x := Abs(Left) > GuiWidth-Right ? GuiWidth-Right : Abs(Left)
    if (Top < 0 && Bottom < GuiHeight)
        y := Abs(Top) > GuiHeight-Bottom ? GuiHeight-Bottom : Abs(Top)
    if (x || y)
        DllCall("ScrollWindow", "uint", WinExist(), "int", x, "int", y, "uint", 0, "uint", 0)
    
}

OnScroll(wParam, lParam, msg, hwnd)
{
    static SIF_ALL=0x17, SCROLL_STEP=10
   
    bar := msg=0x115 ; SB_HORZ=0, SB_VERT=1
   
    VarSetCapacity(si, 28, 0)
    NumPut(28, si) ; cbSize
    NumPut(SIF_ALL, si, 4) ; fMask
    if !DllCall("GetScrollInfo", "uint", hwnd, "int", bar, "uint", &si)
        return
   
    VarSetCapacity(rect, 16)
    DllCall("GetClientRect", "uint", hwnd, "uint", &rect)
   
    new_pos := NumGet(si, 20) ; nPos
    action := wParam & 0xFFFF
    if action = 0 ; SB_LINEUP
        new_pos -= SCROLL_STEP
    else if action = 1 ; SB_LINEDOWN
        new_pos += SCROLL_STEP
    else if action = 2 ; SB_PAGEUP
        new_pos -= NumGet(rect, 12, "int") - SCROLL_STEP
    else if action = 3 ; SB_PAGEDOWN
        new_pos += NumGet(rect, 12, "int") - SCROLL_STEP
    else if action = 5 ; SB_THUMBTRACK
        new_pos := NumGet(si, 24, "int") ; nTrackPos
    else if action = 6 ; SB_TOP
        new_pos := NumGet(si, 8, "int") ; nMin
    else if action = 7 ; SB_BOTTOM
        new_pos := NumGet(si, 12, "int") ; nMax
    else
        return
   
    min := NumGet(si, 8, "int") ; nMin
    max := NumGet(si, 12, "int") - NumGet(si, 16) ; nMax-nPage
    new_pos := new_pos > max ? max : new_pos
    new_pos := new_pos < min ? min : new_pos
    
    global old_pos := NumGet(si, 20, "int") ; nPos
   
    x := y := 0
    if bar = 0 ; SB_HORZ
        x := old_pos-new_pos
    else
        y := old_pos-new_pos
    ; Scroll contents of window and invalidate uncovered area.
    DllCall("ScrollWindow", "uint", hwnd, "int", x, "int", y, "uint", 0, "uint", 0)
   
    ; Update scroll bar.
    NumPut(new_pos, si, 20, "int") ; nPos
    DllCall("SetScrollInfo", "uint", hwnd, "int", bar, "uint", &si, "int", 1)
}

Playnext:
ControlGet, List, List, Selected, SysListView321, A
FocusedRowNumber := LV_GetNext(0, "F")  ; Find the focused row.
    if (again=1)
    {
        LV_Modify(PrevFocus,"Icon" . 9999)
    }
    if (Save_Focus>FocusedRowNumber)
    {
        LV_Modify(FocusedRowNumber,"Icon" . 4)
    }
    else
        LV_Modify(FocusedRowNumber,"Icon" . 3)  
PrevFocus = %FocusedRowNumber%
again=1
FocusedRowNumber--
return

Visual_Toggle:
if(Toggle=1)
{
    GuiControl , hide , Pict
    GuiControl , show , GUI
    GuiControl , enable , GUI
    GuiControl , enable , stp_but
    GuiControl , enable , cnt_but
    GuiControl , enable , slw_but
    GuiControl , enable , fst_but
    GuiControl , enable , cus_but
    SetTimer , Scroll , on
    GuiControl , , Text_l3 , Auto Scroll Lyrics
    Visualflag=
    Toggle=
    return
}
GuiControl , show , Pict
GuiControl , disable , GUI
GuiControl , disable , stp_but
GuiControl , disable , cnt_but
GuiControl , disable , slw_but
GuiControl , disable , fst_but
GuiControl , disable , cus_but
SetTimer , Scroll , off
GuiControl , hide , GUI
ArrayCount = 0
GuiControl , , Text_l3 , Visualization

Loop, %A_WorkingDir%\Visualisations\*.*
    {
        SplitPath , A_LoopFileFullPath, , , Exten
        if Exten in SVP,DLL,UVS
            {
                ArrayCount += 1  ; Keep track of how many items are in the array.
                Array%ArrayCount% := A_LoopFileFullPath  ; Store this line in the next array element.
            }
    }
File_Consider:=1

    Win_handle := WinExist()
    Win_API:= DllCall("GetModuleHandle", "Ptr",0,"Ptr")
    SFX_DC:= DllCall("GetWindowDC","UInt",VZLN,"Int")
    DllCall(A_ScriptDir . "\Bass_SFX.dll\BASS_SFX_Init", "Ptr",Win_API,"Ptr",Win_handle) ;Start BassSFXPlugin
    DllCall(A_ScriptDir . "\Bass_SFX.dll\BASS_SFX_PluginStart", Uint,SFX_Handle)
    DllCall(A_ScriptDir "\Bass_SFX.dll\BASS_SFX_PluginFree") ; Free Bass Contents
    SFX_Handle:=DllCall(A_ScriptDir . "\Bass_SFX.dll\BASS_SFX_PluginCreateW",wstr,A_ScriptDir "\Visualisations\MetreX.svp", UInt,VZN, int ,315, int ,260, Uint,0,Uint)
    DllCall(A_ScriptDir . "\Bass_SFX.dll\BASS_SFX_PluginStart", Uint,SFX_Handle)
    Toggle=1
    Visualflag=1
return

All:
    DllCall(A_ScriptDir "\Bass_SFX.dll\BASS_SFX_PluginFree") ; Free BassSFX Contents
    File_Consider+=1
    if (File_Consider>ArrayCount)
        File_Consider = 1
    Element_Visual := Array%File_Consider%
    Loop , %Element_Visual%
        Visual_file:= A_LoopFileFullPath
    SFX_Handle:=DllCall(A_ScriptDir . "\Bass_SFX.dll\BASS_SFX_PluginCreateW",wstr,Visual_file, UInt,VZLN, int ,315, int ,260, Uint,0,Uint)
    DllCall(A_ScriptDir . "\Bass_SFX.dll\BASS_SFX_PluginStart", Uint,SFX_Handle)
    Visualflag=1
return